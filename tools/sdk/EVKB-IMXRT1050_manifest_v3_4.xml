<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_EVKB-IMXRT1050" name="EVKB-IMXRT1050" brief="This is SDK version 2.6.1 manifest file. It describes the content of the EVKB-IMXRT1050 and additional settings for tools that support SDK version 2.6.1" format_version="3.4" api_version="2.0.0" configuration="4b1e2803ac7714c325fd82bc4169662d" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.4.xsd">
  <!--Timestamp (UTC): 2019-09-04 09:06:13.498297-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso261" name="MCUXpresso261" version="2.6.1" revision="236 2019-07-03"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchainSettings/>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="8.2.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
  </toolchains>
  <boards>
    <board id="evkbimxrt1050" name="EVKB-IMXRT1050" href="https://www.nxp.com/mimxrt1050-evk" version="1.0.0" package="MIMXRT1052DVL6B">
      <description>IMXRT1050-EVKB: EVK Development Platform for i.MX MIMXRT1052 and MIMXRT1051 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="EVKB-IMXRT1050.gif"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The NXP IMXRT1050-EVKB is a development board for the i.MX MIMXRT1052 and MIMXRT1051 600 MHz 32-bit ARM® Cortex®-M7 MCUs.</content>
          </specific>
        </metadata>
      </metadataSet>
      <memory>
        <memoryBlock id="BOARD_FLASH_evkbimxrt1050" name="BOARD_FLASH" addr="60000000" size="04000000" type="ExtFlash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkbimxrt1050" name="BOARD_SDRAM" addr="80000000" size="02000000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="65536" ram_size_kb="32768"/>
      <examples>
        <example id="evkbimxrt1050_adc_12b1msps_sar_interrupt" name="adc_12b1msps_sar_interrupt" brief="The adc_interrupt example shows how to use interrupt with adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the adc interrupt configuration is set when configuring the adc's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="armgcc" category="driver_examples/adc" path="boards/evkbimxrt1050/driver_examples/adc/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/adc/interrupt" type="xml">
            <files mask="adc_12b1msps_sar_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_adc_12b1msps_sar_polling" name="adc_12b1msps_sar_polling" brief="The adc_polling example shows the simplest way to use adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement.The auto-calibration is not essential but strongly recommended. It can help to adjust the converter itself and improvethe adc's performance." toolchain="armgcc" category="driver_examples/adc" path="boards/evkbimxrt1050/driver_examples/adc/polling">
          <external path="boards/evkbimxrt1050/driver_examples/adc/polling" type="xml">
            <files mask="adc_12b1msps_sar_polling.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_adc_etc_hardware_trigger_conv" name="adc_etc_hardware_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by PIT channel0 trigger.Every 1 second, PIT channel0 would send a trigger signal to ADC_ETC, which can arbitrate and manage multiple external triggers,and ADC_ETC would generate ADC trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc" category="driver_examples/adc_etc" path="boards/evkbimxrt1050/driver_examples/adc_etc/adc_etc_hardware_trigger_conv">
          <external path="boards/evkbimxrt1050/driver_examples/adc_etc/adc_etc_hardware_trigger_conv" type="xml">
            <files mask="adc_etc_hardware_trigger_conv.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_adc_etc_software_trigger_conv" name="adc_etc_software_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by software trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc" category="driver_examples/adc_etc" path="boards/evkbimxrt1050/driver_examples/adc_etc/adc_etc_software_trigger_conv">
          <external path="boards/evkbimxrt1050/driver_examples/adc_etc/adc_etc_software_trigger_conv" type="xml">
            <files mask="adc_etc_software_trigger_conv.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_bee" name="bee" brief="This driver example should demonstrate how to setup BEE driver for on the fly decryption of data stored in QSPI memory region. The BEE is configuerd to decrypt all data starting from location 0x6000_0000 to 0x6001_0000 using AES ECB mode with user specified key. If the BEE_KEY_SEL fuse is programmed, then OTPMK key will be used instead.The example itself does not perform any data decryption operation over QSPI. It is used only as a BEE setup guide." toolchain="armgcc" category="driver_examples/bee" path="boards/evkbimxrt1050/driver_examples/bee">
          <external path="boards/evkbimxrt1050/driver_examples/bee" type="xml">
            <files mask="bee.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_bubble" name="bubble" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/bubble">
          <external path="boards/evkbimxrt1050/demo_apps/bubble" type="xml">
            <files mask="bubble.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_bubble_peripheral" name="bubble_peripheral" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/bubble_peripheral">
          <external path="boards/evkbimxrt1050/demo_apps/bubble_peripheral" type="xml">
            <files mask="bubble_peripheral.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cache" name="cache" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/cache">
          <external path="boards/evkbimxrt1050/driver_examples/cache" type="xml">
            <files mask="cache.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmp_interrupt" name="cmp_interrupt" brief="The CMP interrupt Example shows how to use interrupt with CMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any CMP interrupt happens, the CMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc" category="driver_examples/cmp" path="boards/evkbimxrt1050/driver_examples/cmp/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/cmp/interrupt" type="xml">
            <files mask="cmp_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmp_polling" name="cmp_polling" brief="The CMP polling Example shows the simplest way to use CMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc" category="driver_examples/cmp" path="boards/evkbimxrt1050/driver_examples/cmp/polling">
          <external path="boards/evkbimxrt1050/driver_examples/cmp/polling" type="xml">
            <files mask="cmp_polling.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="cmsis_driver_examples/lpi2c" path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="cmsis_driver_examples/lpi2c" path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="cmsis_driver_examples/lpi2c" path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="cmsis_driver_examples/lpi2c" path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" category="cmsis_driver_examples/lpspi" path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" category="cmsis_driver_examples/lpspi" path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" category="cmsis_driver_examples/lpspi" path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" category="cmsis_driver_examples/lpspi" path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" category="cmsis_driver_examples/lpuart" path="boards/evkbimxrt1050/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" category="cmsis_driver_examples/lpuart" path="boards/evkbimxrt1050/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkbimxrt1050/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_nn_cifar10" name="cmsis_nn_cifar10" brief="CIFAR-10 example for CMSIS-NN" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/cmsis_nn_cifar10">
          <external path="boards/evkbimxrt1050/eiq_examples/cmsis_nn_cifar10" type="xml">
            <files mask="cmsis_nn_cifar10.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_cmsis_nn_kws" name="cmsis_nn_kws" brief="Keyword spotting example for CMSIS-NN" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/cmsis_nn_kws">
          <external path="boards/evkbimxrt1050/eiq_examples/cmsis_nn_kws" type="xml">
            <files mask="cmsis_nn_kws.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_csi_ccir656" name="csi_ccir656" brief="The CSI CCIR656 project shows how to receive the camera data using CSI driver,the camera interface is CCIR656. In this example, you will see the camera inputimage shown in the LCD. Please note that the camera input image resolutionmight be smaller than the LCD panel, so part of the LCD panel might be blank." toolchain="armgcc" category="driver_examples/csi" path="boards/evkbimxrt1050/driver_examples/csi/ccir656">
          <external path="boards/evkbimxrt1050/driver_examples/csi/ccir656" type="xml">
            <files mask="csi_ccir656.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_csi_fragment_gray" name="csi_fragment_gray" brief="The csi_fragment_gray project shows how to use CSI driver fragment mode functions. In this example, the camera input format is YUV422, the CSI driver extracts the Y element of a specific window (gray image). To show gray image, ELCDIF LUT is used. If this example runs successfully, you will see a gray image window in the middle of the LCD panel. The image is updated each time input any value from debug console. Please note that only one frame buffer is used in this example, so there might be screen tearing." toolchain="armgcc" category="driver_examples/csi" path="boards/evkbimxrt1050/driver_examples/csi/fragment_gray">
          <external path="boards/evkbimxrt1050/driver_examples/csi/fragment_gray" type="xml">
            <files mask="csi_fragment_gray.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_csi_rgb565" name="csi_rgb565" brief="The CSI RGB565 project shows how to receive the camera data using CSI driver.In this example, you will see the camera input image shown in the LCD. Pleasenote that the camera input image resolution might be smaller than the LCDpanel, so part of the LCD panel might be blank." toolchain="armgcc" category="driver_examples/csi" path="boards/evkbimxrt1050/driver_examples/csi/rgb565">
          <external path="boards/evkbimxrt1050/driver_examples/csi/rgb565" type="xml">
            <files mask="csi_rgb565.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dcp" name="dcp" brief="The DCP Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the DCP software driver." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/dcp">
          <external path="boards/evkbimxrt1050/driver_examples/dcp" type="xml">
            <files mask="dcp.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_audio_speaker_bm" name="dev_audio_speaker_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_audio_speaker_lite_bm" name="dev_audio_speaker_lite_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_cdc_vnic_bm" name="dev_cdc_vnic_bm" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vnic/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vnic/bm" type="xml">
            <files mask="dev_cdc_vnic_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_cdc_vnic_lite_bm" name="dev_cdc_vnic_lite_bm" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vnic_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_cdc_vnic_lite/bm" type="xml">
            <files mask="dev_cdc_vnic_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_msc_sdcard_bm" name="dev_composite_cdc_msc_sdcard_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_sdcard/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_sdcard/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_msc_sdcard_lite_bm" name="dev_composite_cdc_msc_sdcard_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_hid_audio_unified_bm" name="dev_composite_hid_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_hid_audio_unified_lite_bm" name="dev_composite_hid_audio_unified_lite_bm" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_dfu_bm" name="dev_dfu_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_dfu/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_dfu/bm" type="xml">
            <files mask="dev_dfu_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_dfu_lite_bm" name="dev_dfu_lite_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_dfu_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_dfu_lite/bm" type="xml">
            <files mask="dev_dfu_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_msc_sdcard_bm" name="dev_msc_sdcard_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_msc_sdcard/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_msc_sdcard/bm" type="xml">
            <files mask="dev_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_msc_sdcard_lite_bm" name="dev_msc_sdcard_lite_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_msc_sdcard_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_ecompass" name="ecompass" brief="The E-Compass demo application demonstrates the use of the FXOS8700 sensor. The tilt-compensated algorithm calculatesall three angles (pitch, roll, and yaw or compass heading)." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/ecompass">
          <external path="boards/evkbimxrt1050/demo_apps/ecompass" type="xml">
            <files mask="ecompass.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_edma_memory_to_memory" name="edma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" category="driver_examples/edma" path="boards/evkbimxrt1050/driver_examples/edma/memory_to_memory">
          <external path="boards/evkbimxrt1050/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="edma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_edma_scatter_gather" name="edma_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" category="driver_examples/edma" path="boards/evkbimxrt1050/driver_examples/edma/scatter_gather">
          <external path="boards/evkbimxrt1050/driver_examples/edma/scatter_gather" type="xml">
            <files mask="edma_scatter_gather.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_elcdif_lut" name="elcdif_lut" brief="The ELCDIF LUT project shows how to use the ELCDIF LUT to convert 8-bit input pixelto 24-bit output pixel. There are two LUT memories, this project uses one inputframe buffer, and swithes between the two memories, so from the LCD panel, twodifferent pictures are shown one by one." toolchain="armgcc" category="driver_examples/elcdif/lut" path="boards/evkbimxrt1050/driver_examples/elcdif/lut">
          <external path="boards/evkbimxrt1050/driver_examples/elcdif/lut" type="xml">
            <files mask="elcdif_lut.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_elcdif_rgb" name="elcdif_rgb" brief="The ELCDIF RGB project shows how to drive the RGB interface LCD using eLCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc" category="driver_examples/elcdif" path="boards/evkbimxrt1050/driver_examples/elcdif/rgb">
          <external path="boards/evkbimxrt1050/driver_examples/elcdif/rgb" type="xml">
            <files mask="elcdif_rgb.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_enc_basic" name="enc_basic" brief="The enc_basic example shows how to quickly start using ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. When running the project, user can turn the encoder so that ENC module can monitor the position change. Then, the internal counter would also count for the position. User can also type keys into terminal, and the current position values recorded by ENC would display. The ENC hardware is created with a special synchronize mechanism. There are actually 4 counters (the 32-bit position counter is combined with the two 16-bit counter registers) for position with responding hold registers. When any of the counter registers is read, the contents of each counter register is written to the corresponding hold register. Taking a snapshot of the counters' values provides a consistent view of a system position and a velocity to be attained." toolchain="armgcc" category="driver_examples/enc" path="boards/evkbimxrt1050/driver_examples/enc/basic">
          <external path="boards/evkbimxrt1050/driver_examples/enc/basic" type="xml">
            <files mask="enc_basic.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_enc_index_interrupt" name="enc_index_interrupt" brief="The enc_index_interrupt example shows how to use the interrupt of ENC module with ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. However, the additional INDEX/HOME/TRIGGER could be used as the event detector. INDEX: This pulse can optionally reset the position counter and the pulse accumulator of the quadrature decoder module. It also causes a change of state on the revolution counter. The direction of this change, increment or decrement, is calculated from the PHASEA and PHASEB inputs.HOME: This input can be used to trigger the initialization of the position counters. Often this signal is connected to a sensor signalling the motor or machine, sending notification that it has reached a defined home position.TRIGGER: This input can be used to clear the position counters or to take a snapshot of the POS, REV, and POSD registers. Often this signal is connected to a periodic pulse generator or timer to indicate an elapsed time period.This example uses INDEX to response the external event. When running the project, user can turn the encoder so that ENC module can monitor the position change. Also, a variable counter would count the time of INDEX interrupt for rising edge on INDEX signal line." toolchain="armgcc" category="driver_examples/enc" path="boards/evkbimxrt1050/driver_examples/enc/index_interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/enc/index_interrupt" type="xml">
            <files mask="enc_index_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc" category="driver_examples/enet" path="boards/evkbimxrt1050/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_enet_txrx_transfer" name="enet_txrx_transfer" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc" category="driver_examples/enet" path="boards/evkbimxrt1050/driver_examples/enet/txrx_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/enet/txrx_transfer" type="xml">
            <files mask="enet_txrx_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/ewm">
          <external path="boards/evkbimxrt1050/driver_examples/ewm" type="xml">
            <files mask="ewm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" category="driver_examples/flexcan" path="boards/evkbimxrt1050/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" category="driver_examples/flexcan" path="boards/evkbimxrt1050/driver_examples/flexcan/loopback">
          <external path="boards/evkbimxrt1050/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" category="driver_examples/flexcan" path="boards/evkbimxrt1050/driver_examples/flexcan/loopback_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_i2c_read_accel_value_transfer" name="flexio_i2c_read_accel_value_transfer" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_i2s_edma_transfer" name="flexio_i2s_edma_transfer" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/i2s/edma_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/i2s/edma_transfer" type="xml">
            <files mask="flexio_i2s_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_i2s_interrupt_transfer" name="flexio_i2s_interrupt_transfer" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/i2s/interrupt_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/i2s/interrupt_transfer" type="xml">
            <files mask="flexio_i2s_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/pwm">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/uart/edma_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc" category="driver_examples/flexio" path="boards/evkbimxrt1050/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexram_ram_access" name="flexram_ram_access" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc" category="driver_examples/flexram" path="boards/evkbimxrt1050/driver_examples/flexram/ram_access">
          <external path="boards/evkbimxrt1050/driver_examples/flexram/ram_access" type="xml">
            <files mask="flexram_ram_access.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexram_ram_allocate" name="flexram_ram_allocate" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc" category="driver_examples/flexram" path="boards/evkbimxrt1050/driver_examples/flexram/ram_allocate">
          <external path="boards/evkbimxrt1050/driver_examples/flexram/ram_allocate" type="xml">
            <files mask="flexram_ram_allocate.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexspi_hyper_flash_polling_transfer" name="flexspi_hyper_flash_polling_transfer" brief="The flexspi_hyper_flash_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper flash connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Erase Sector and Program Buffer.Example will first configures hyper flash to enter ASO mode, read ID-CFI parameters, then exit ASO mode.Second, the example erase a sector in flash, check if the erase is successful and program the same sector, then read backthe sector data. At last check if the data read back is correct." toolchain="armgcc" category="driver_examples/flexspi" path="boards/evkbimxrt1050/driver_examples/flexspi/hyper_flash/polling_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexspi/hyper_flash/polling_transfer" type="xml">
            <files mask="flexspi_hyper_flash_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_flexspi_nor_polling_transfer" name="flexspi_nor_polling_transfer" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc" category="driver_examples/flexspi" path="boards/evkbimxrt1050/driver_examples/flexspi/nor/polling_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/flexspi/nor/polling_transfer" type="xml">
            <files mask="flexspi_nor_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc" category="driver_examples/gpt" path="boards/evkbimxrt1050/driver_examples/gpt/timer">
          <external path="boards/evkbimxrt1050/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/hello_world">
          <external path="boards/evkbimxrt1050/demo_apps/hello_world" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_hello_world_virtual_com" name="hello_world_virtual_com" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/hello_world_virtual_com">
          <external path="boards/evkbimxrt1050/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_audio_speaker_bm" name="host_audio_speaker_bm" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_cdc_bm" name="host_cdc_bm" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_cdc/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_hid_generic_bm" name="host_hid_generic_bm" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_hid_mouse_bm" name="host_hid_mouse_bm" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_hid_mouse_keyboard_bm" name="host_hid_mouse_keyboard_bm" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_msd_command_bm" name="host_msd_command_bm" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_msd_command/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_phdc_manager_bm" name="host_phdc_manager_bm" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_printer_plain_text_bm" name="host_printer_plain_text_bm" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_host_suspend_resume_hid_mouse_bm" name="host_suspend_resume_hid_mouse_bm" brief="This is one example support suspend/resume." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_igpio_input_interrupt" name="igpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc" category="driver_examples/gpio" path="boards/evkbimxrt1050/driver_examples/gpio/input_interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="igpio_input_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc" category="driver_examples/gpio" path="boards/evkbimxrt1050/driver_examples/gpio/led_output">
          <external path="boards/evkbimxrt1050/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_iled_blinky" name="iled_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/led_blinky">
          <external path="boards/evkbimxrt1050/demo_apps/led_blinky" type="xml">
            <files mask="iled_blinky.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_keyboard2mouse_bm" name="keyboard2mouse_bm" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_keyboard2mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_keyboard2mouse/bm" type="xml">
            <files mask="keyboard2mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_kpp" name="kpp" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/kpp">
          <external path="boards/evkbimxrt1050/driver_examples/kpp" type="xml">
            <files mask="kpp.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpi2c_interrupt" name="lpi2c_interrupt" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc" category="driver_examples/lpi2c" path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt" type="xml">
            <files mask="lpi2c_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="driver_examples/lpi2c" path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="driver_examples/lpi2c" path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpi2c_polling_b2b_transfer_master" name="lpi2c_polling_b2b_transfer_master" brief="The lpi2c_polling_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="driver_examples/lpi2c" path="boards/evkbimxrt1050/driver_examples/lpi2c/polling_b2b_transfer/master">
          <external path="boards/evkbimxrt1050/driver_examples/lpi2c/polling_b2b_transfer/master" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpi2c_polling_b2b_transfer_slave" name="lpi2c_polling_b2b_transfer_slave" brief="The lpi2c_polling_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" category="driver_examples/lpi2c" path="boards/evkbimxrt1050/driver_examples/lpi2c/polling_b2b_transfer/slave">
          <external path="boards/evkbimxrt1050/driver_examples/lpi2c/polling_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpspi_interrupt" name="lpspi_interrupt" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" category="driver_examples/lpspi" path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt" type="xml">
            <files mask="lpspi_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" category="driver_examples/lpspi" path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" category="driver_examples/lpspi" path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/evkbimxrt1050/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_edma_rb_transfer" name="lpuart_edma_rb_transfer" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/edma_rb_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/edma_rb_transfer" type="xml">
            <files mask="lpuart_edma_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/edma_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_interrupt_transfer_seven_bits" name="lpuart_interrupt_transfer_seven_bits" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_transfer_seven_bits">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/interrupt_transfer_seven_bits" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/polling">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_lpuart_polling_seven_bits" name="lpuart_polling_seven_bits" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc" category="driver_examples/lpuart" path="boards/evkbimxrt1050/driver_examples/lpuart/polling_seven_bits">
          <external path="boards/evkbimxrt1050/driver_examples/lpuart/polling_seven_bits" type="xml">
            <files mask="lpuart_polling_seven_bits.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_ocotp_example" name="ocotp_example" brief="The ocotp driver example shows how to operation the OCOTP register with driver API." toolchain="armgcc" category="driver_examples/ocotp" path="boards/evkbimxrt1050/driver_examples/ocotp">
          <external path="boards/evkbimxrt1050/driver_examples/ocotp" type="xml">
            <files mask="ocotp_example.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pin_detect_hid_mouse_bm" name="pin_detect_hid_mouse_bm" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc" category="usb_examples" path="boards/evkbimxrt1050/usb_examples/usb_pin_detect_hid_mouse/bm">
          <external path="boards/evkbimxrt1050/usb_examples/usb_pin_detect_hid_mouse/bm" type="xml">
            <files mask="pin_detect_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/pit">
          <external path="boards/evkbimxrt1050/driver_examples/pit" type="xml">
            <files mask="pit.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_power_mode_switch_bm" name="power_mode_switch_bm" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/power_mode_switch_bm">
          <external path="boards/evkbimxrt1050/demo_apps/power_mode_switch_bm" type="xml">
            <files mask="power_mode_switch_bm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pwm" name="pwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/pwm">
          <external path="boards/evkbimxrt1050/driver_examples/pwm" type="xml">
            <files mask="pwm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_blend" name="pxp_blend" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/blend">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/blend" type="xml">
            <files mask="pxp_blend.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_flip" name="pxp_flip" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/flip">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/flip" type="xml">
            <files mask="pxp_flip.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_lcdif_handshake" name="pxp_lcdif_handshake" brief="The PXP LCDIF hand shake project shows how to enable the hand shake betweenPXP and LCDIF. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface.NOTE:This example must run continously to get the right result, breaking during debugwill results to handshake fail. Because the PXP must be started before every LCDframe, if system is halt, the PXP does not start correctly." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/lcdif_handshake">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/lcdif_handshake" type="xml">
            <files mask="pxp_lcdif_handshake.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_queue" name="pxp_queue" brief="The PXP queue project shows how to use the PXP command queue. This exampleuse the command queue to rotate the process surface. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/queue">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/queue" type="xml">
            <files mask="pxp_queue.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_rotate" name="pxp_rotate" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/rotate">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/rotate" type="xml">
            <files mask="pxp_rotate.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_pxp_scale" name="pxp_scale" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc" category="driver_examples/pxp" path="boards/evkbimxrt1050/driver_examples/pxp/scale">
          <external path="boards/evkbimxrt1050/driver_examples/pxp/scale" type="xml">
            <files mask="pxp_scale.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_qtmr_inputcapture_outputpwm" name="qtmr_inputcapture_outputpwm" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/qtmr/inputcapture_outputpwm">
          <external path="boards/evkbimxrt1050/driver_examples/qtmr/inputcapture_outputpwm" type="xml">
            <files mask="qtmr_inputcapture_outputpwm.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_qtmr_inputcapture_outputpwm_dma" name="qtmr_inputcapture_outputpwm_dma" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/qtmr/inputcapture_outputpwm_dma">
          <external path="boards/evkbimxrt1050/driver_examples/qtmr/inputcapture_outputpwm_dma" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_qtmr_timer" name="qtmr_timer" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/qtmr/timer">
          <external path="boards/evkbimxrt1050/driver_examples/qtmr/timer" type="xml">
            <files mask="qtmr_timer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_rtwdog" name="rtwdog" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc" category="driver_examples/rtwdog" path="boards/evkbimxrt1050/driver_examples/rtwdog">
          <external path="boards/evkbimxrt1050/driver_examples/rtwdog" type="xml">
            <files mask="rtwdog.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_edma_half_interrupt" name="sai_edma_half_interrupt" brief="The sai_edma_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/edma_half_interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/sai/edma_half_interrupt" type="xml">
            <files mask="sai_edma_half_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_edma_record_playback" name="sai_edma_record_playback" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/edma_record_playback">
          <external path="boards/evkbimxrt1050/driver_examples/sai/edma_record_playback" type="xml">
            <files mask="sai_edma_record_playback.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/edma_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_interrupt_record_playback" name="sai_interrupt_record_playback" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/interrupt_record_playback">
          <external path="boards/evkbimxrt1050/driver_examples/sai/interrupt_record_playback" type="xml">
            <files mask="sai_interrupt_record_playback.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" category="driver_examples/sai" path="boards/evkbimxrt1050/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkbimxrt1050/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sdcard_interrupt" name="sdcard_interrupt" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc" category="driver_examples/sdcard" path="boards/evkbimxrt1050/driver_examples/sdcard/interrupt">
          <external path="boards/evkbimxrt1050/driver_examples/sdcard/interrupt" type="xml">
            <files mask="sdcard_interrupt.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_sdcard_polling" name="sdcard_polling" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc" category="driver_examples/sdcard" path="boards/evkbimxrt1050/driver_examples/sdcard/polling">
          <external path="boards/evkbimxrt1050/driver_examples/sdcard/polling" type="xml">
            <files mask="sdcard_polling.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_semc" name="semc" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc" category="driver_examples/semc" path="boards/evkbimxrt1050/driver_examples/semc/sdram">
          <external path="boards/evkbimxrt1050/driver_examples/semc/sdram" type="xml">
            <files mask="semc.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/shell">
          <external path="boards/evkbimxrt1050/demo_apps/shell" type="xml">
            <files mask="shell.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_snvs_hp_hac" name="snvs_hp_hac" brief="The SNVS HP HAC project shows how to use the High Assurance Counter (HAC) based on SDK SNVS HP driver. In this example, The HAC is enabled and set a initial value. Software fatal security violation is triggered, and the SSM switches to soft fail mode. In soft fail mode, software stops the HAC counter, and clear the HAC to make SSM switch to hard fail mode. The system resets when enters hard fail mode." toolchain="armgcc" category="driver_examples/snvs" path="boards/evkbimxrt1050/driver_examples/snvs/snvs_hp_hac">
          <external path="boards/evkbimxrt1050/driver_examples/snvs/snvs_hp_hac" type="xml">
            <files mask="snvs_hp_hac.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_snvs_hp_rtc" name="snvs_hp_rtc" brief="The SNVS HP RTC project is a simple demonstration program of the SDK SNVS HP driver. The test will set up RTC date and time to a predefined value and starts the counter. RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined date and time." toolchain="armgcc" category="driver_examples/snvs" path="boards/evkbimxrt1050/driver_examples/snvs/snvs_hp_rtc">
          <external path="boards/evkbimxrt1050/driver_examples/snvs/snvs_hp_rtc" type="xml">
            <files mask="snvs_hp_rtc.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_snvs_lp_mc" name="snvs_lp_mc" brief="The SNVS LP MC project shows how to use the Monotonic Counter (MC) based on SDK SNVS LP driver. In this example, the MC value is increased and checked several times." toolchain="armgcc" category="driver_examples/snvs" path="boards/evkbimxrt1050/driver_examples/snvs/snvs_lp_mc">
          <external path="boards/evkbimxrt1050/driver_examples/snvs/snvs_lp_mc" type="xml">
            <files mask="snvs_lp_mc.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_snvs_lp_srtc" name="snvs_lp_srtc" brief="The SNVS LP SRTC project is a simple demonstration program of the SDK SNVS LP driver. The test will set up secure RTC (SRTC) date and time to a predefined value and starts the counter, then the SRTC counter value is synchronized with non secure RTC (RTC). RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc" category="driver_examples/snvs" path="boards/evkbimxrt1050/driver_examples/snvs/snvs_lp_srtc">
          <external path="boards/evkbimxrt1050/driver_examples/snvs/snvs_lp_srtc" type="xml">
            <files mask="snvs_lp_srtc.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_snvs_sw_zmk" name="snvs_sw_zmk" brief="The SNVS SW ZMK project shows how to provision the zeroizable master key (ZMK) by software based on SDK SNVS driver. In this example, ZMK key value is set and ECC is enabled. When change the ZMK key value, violation detected and ZMK key is zeroized." toolchain="armgcc" category="driver_examples/snvs" path="boards/evkbimxrt1050/driver_examples/snvs/snvs_sw_zmk">
          <external path="boards/evkbimxrt1050/driver_examples/snvs/snvs_sw_zmk" type="xml">
            <files mask="snvs_sw_zmk.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_src_reset_source" name="src_reset_source" brief="The src_reset_source example shows how to check the reset source and boot option with SRC driver.When run this example firstly on the board after power up, the POR reset or IPP reset flag would be asserted. But when running it again, the flag would be cleared, since it is no longer a reset.Usually, the reset flags are used and cleared by ROM code or bootloader to check which reset occurred. With the boot mode words, the initial boot code would go to the right way to execute the start code. For example, when the SoC is waked up from some low power mode, all necessary data are already staying in the RAM, the CPU would not have to reload the program to RAM and execute the application directly." toolchain="armgcc" category="driver_examples/src" path="boards/evkbimxrt1050/driver_examples/src/src_reset_source">
          <external path="boards/evkbimxrt1050/driver_examples/src/src_reset_source" type="xml">
            <files mask="src_reset_source.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_temperaturemonitor" name="temperaturemonitor" brief="The TEMPMON project is a simple demonstration program of the SDK TEMPMON driver.The temperatue monitor (TEMPMON) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/tempmon">
          <external path="boards/evkbimxrt1050/driver_examples/tempmon" type="xml">
            <files mask="temperaturemonitor.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_tensorflow_lite_cifar10" name="tensorflow_lite_cifar10" brief="CIFAR-10 example for TensorFlow Lite" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_cifar10">
          <external path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_cifar10" type="xml">
            <files mask="tensorflow_lite_cifar10.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_tensorflow_lite_kws" name="tensorflow_lite_kws" brief="Keyword spotting example for TensorFlow Lite" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_kws">
          <external path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_kws" type="xml">
            <files mask="tensorflow_lite_kws.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_tensorflow_lite_label_image" name="tensorflow_lite_label_image" brief="Label image example for TensorFlow Lite" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_label_image">
          <external path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_label_image" type="xml">
            <files mask="tensorflow_lite_label_image.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_tensorflow_lite_lib" name="tensorflow_lite_lib" brief="TensorFlow Lite library" toolchain="armgcc" category="eiq_examples" path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_lib">
          <external path="boards/evkbimxrt1050/eiq_examples/tensorflow_lite_lib" type="xml">
            <files mask="tensorflow_lite_lib.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_trng_random" name="trng_random" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc" category="driver_examples/trng" path="boards/evkbimxrt1050/driver_examples/trng/random">
          <external path="boards/evkbimxrt1050/driver_examples/trng/random" type="xml">
            <files mask="trng_random.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc" category="driver_examples/wdog" path="boards/evkbimxrt1050/driver_examples/wdog">
          <external path="boards/evkbimxrt1050/driver_examples/wdog" type="xml">
            <files mask="wdog01.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_xbar_aoi" name="xbar_aoi" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc" category="demo_apps" path="boards/evkbimxrt1050/demo_apps/xbar_aoi">
          <external path="boards/evkbimxrt1050/demo_apps/xbar_aoi" type="xml">
            <files mask="xbar_aoi.xml"/>
          </external>
        </example>
        <example id="evkbimxrt1050_xbara" name="xbara" brief="The Xbara project is a simple demonstration program of the SDK Xbara driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbara hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="armgcc" category="driver_examples" path="boards/evkbimxrt1050/driver_examples/xbara">
          <external path="boards/evkbimxrt1050/driver_examples/xbara" type="xml">
            <files mask="xbara.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="BOARD_FLASH_evkbimxrt1050">
              <driverBinary path="devices/MIMXRT1052/mcuxpresso" type="binary">
                <files mask="MIMXRT1050_SFDP_HYPERFLASH.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT1052xxxxB" name="MIMXRT1052" href="http://www.nxp.com/kinetis" version="1.0.0" full_name="MIMXRT1052xxxxB">
      <description>MIMXRT1052: i.MX® MIMXRT1052 600MHz, 512KB SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M7 Core</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="vendor.device.type" value="i.MX"/>
        <metadata key="vendor.device.family" value="MIMXRT1050"/>
        <metadata key="compatible_device.segger" value="MCIMXRT1052"/>
        <metadata key="compatible_device.pemicro" value="IMXRT1052"/>
        <metadata key="html">
          <specific>
            <content>The MIMXRT1052 are ARM Cortex-M7 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
      </metadataSet>
      <core id="core0_MIMXRT1052xxxxB" name="core0" fpu="true" type="cm7"/>
      <memory>
        <memoryBlock id="SRAM_DTC_MIMXRT1052xxxxB" name="SRAM_DTC" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ITC_MIMXRT1052xxxxB" name="SRAM_ITC" addr="00000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_MIMXRT1052xxxxB" name="SRAM_OC" addr="20200000" size="00040000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="512"/>
      <package id="MIMXRT1052CVL5B" name="MIMXRT1052CVL5B"/>
      <package id="MIMXRT1052CVJ5B" name="MIMXRT1052CVJ5B"/>
      <package id="MIMXRT1052DVL6B" name="MIMXRT1052DVL6B"/>
      <package id="MIMXRT1052DVJ6B" name="MIMXRT1052DVJ6B"/>
      <evaluation_boards>
        <evaluation_board name="evkbimxrt1050"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="misc.options.MIMXRT1052xxxxB" name="misc.options" value="--no-packed"/>
            <params id="internal.wiretype.release.MIMXRT1052xxxxB" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1052xxxxB" name="internal.has_swo" value="false"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkbimxrt1050.MIMXRT1052" name="evkbimxrt1050" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 component.lpuart_adapter.MIMXRT1052 component.serial_manager.MIMXRT1052 component.serial_manager_uart.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 device.MIMXRT1052_startup.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.igpio.MIMXRT1052 platform.drivers.iomuxc.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052 platform.drivers.xip_board.MIMXRT1052 platform.drivers.xip_device.MIMXRT1052 utility.debug_console.MIMXRT1052" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/evkbimxrt1050/project_template" target_path="board/boards" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/evkbimxrt1050/project_template" target_path="board/boards" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMXRT1052" name="CMSIS" version="5.1.1" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1052 platform.Include_common.MIMXRT1052" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMXRT1052" name="CMSIS_DSP_Lib" version="5.1.1" devices="MIMXRT1052xxxxB" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/BasicMathFunctions" target_path="src" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/CommonTables" target_path="src" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ComplexMathFunctions" target_path="src" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ControllerFunctions" target_path="src" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FastMathFunctions" target_path="src" type="src">
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FilteringFunctions" target_path="src" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/MatrixFunctions" target_path="src" type="src">
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/StatisticsFunctions" target_path="src" type="src">
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/SupportFunctions" target_path="src" type="src">
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfdp_math.MIMXRT1052" name="arm_cortexM7bfdp_math" version="1.5.2" devices="MIMXRT1052xxxxB" user_visible="true" type="CMSIS_driver"/>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfsp_math.MIMXRT1052" name="arm_cortexM7bfsp_math" version="1.5.2" devices="MIMXRT1052xxxxB" user_visible="true" type="CMSIS_driver"/>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfdp_math.MIMXRT1052" name="arm_cortexM7lfdp_math" version="1.5.2" devices="MIMXRT1052xxxxB" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7lfdp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfsp_math.MIMXRT1052" name="arm_cortexM7lfsp_math" version="1.5.2" devices="MIMXRT1052xxxxB" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7lfsp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="5.1.1" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1052" name="CAN" version="1.2.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" name="Common" version="5.1.1" devices="MIMXRT1052xxxxB" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1052" name="Ethernet" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1052" name="Ethernet_MAC" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1052" name="Ethernet_PHY" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1052" name="Flash" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1052" name="I2C" version="2.3.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1052" name="MCI" version="2.3.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1052" name="NAND" version="2.3.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1052" name="SAI" version="1.1.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1052" name="SPI" version="2.2.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1052" name="USART" version="2.3.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1052" name="USB" version="2.2.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1052" name="USB_Device" version="2.2.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1052" name="USB_Host" version="2.2.0" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1052" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMXRT1052" name="CMSIS_Include_common" version="5.1.1" devices="MIMXRT1052xxxxB" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm7.MIMXRT1052" name="CMSIS_Include_core_cm7" version="5.1.1" devices="MIMXRT1052xxxxB" dependency="platform.Include_common.MIMXRT1052" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm7.h"/>
      </source>
    </component>
    <component id="project_template.MIMXRT1052.MIMXRT1052" name="MIMXRT1052" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 component.lpuart_adapter.MIMXRT1052 component.serial_manager.MIMXRT1052 component.serial_manager_uart.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 device.MIMXRT1052_startup.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.igpio.MIMXRT1052 platform.drivers.iomuxc.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052 utility.debug_console.MIMXRT1052" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMXRT1052/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMXRT1052/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMXRT1052" name="RTE_Device" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMXRT1052/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMXRT1052" name="cmake_toolchain" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.codec_i2c.MIMXRT1052" name="codec_i2c" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/i2c" target_path="codec" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source path="components/codec/i2c" target_path="codec" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
    </component>
    <component id="component.cs42888_adapter.MIMXRT1052" name="cs42888_adapter" version="2.1.1" devices="MIMXRT1052xxxxB" dependency="component.codec_i2c.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 driver.codec.MIMXRT1052 driver.cs42888.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/port/cs42888" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="component.lists.MIMXRT1052" name="lists" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1052" name="lpi2c_adapter" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.lpi2c.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/i2c" target_path="component/i2c" type="c_include">
        <files mask="i2c.h"/>
      </source>
      <source path="components/i2c" target_path="component/i2c" type="src">
        <files mask="lpi2c_adapter.c"/>
      </source>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1052" name="lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="lpuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMXRT1052" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1052" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1052" name="serial_manager_usb_cdc" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 middleware.usb.device.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="other">
        <files mask="cdc.cat"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="configuration">
        <files mask="fsl_ucwxp.inf"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_device_config.evkbimxrt1050.MIMXRT1052" name="evkbimxrt1050" version="1.0.0" devices="MIMXRT1052xxxxB" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="boards/evkbimxrt1050/component_examples/config" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="component.wm8960_adapter.MIMXRT1052" name="wm8960_adapter" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="component.codec_i2c.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 driver.codec.MIMXRT1052 driver.wm8960.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/port/wm8960" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="device.MIMXRT1052_CMSIS.MIMXRT1052" name="MIMXRT1052_CMSIS" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052" user_visible="true" type="CMSIS_Include">
      <source path="devices/MIMXRT1052" target_path="device" type="c_include">
        <files mask="MIMXRT1052.h"/>
        <files mask="MIMXRT1052_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMXRT1052.h"/>
      </source>
      <source path="devices/MIMXRT1052" target_path="device" type="src">
        <files mask="system_MIMXRT1052.c"/>
      </source>
    </component>
    <component id="device.MIMXRT1052_debugger.MIMXRT1052" name="MIMXRT1052_debugger" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="debugger">
      <source path="devices/MIMXRT1052" target_path="src" type="xml">
        <files mask="MIMXRT1052.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1052_linker.MIMXRT1052" name="MIMXRT1052_linker" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="linker">
      <source toolchain="armgcc" path="devices/MIMXRT1052/gcc" target_path="src" type="linker">
        <files mask="MIMXRT1052xxxxx_flexspi_nor.ld"/>
        <files mask="MIMXRT1052xxxxx_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1052xxxxx_ram.ld"/>
        <files mask="MIMXRT1052xxxxx_sdram.ld"/>
        <files mask="MIMXRT1052xxxxx_sdram_txt.ld"/>
      </source>
    </component>
    <component id="device.MIMXRT1052_startup.MIMXRT1052" name="MIMXRT1052_startup" version="1.0.0" devices="MIMXRT1052xxxxB" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="armgcc" path="devices/MIMXRT1052/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1052.S"/>
      </source>
    </component>
    <component id="docs.MIMXRT1052.MIMXRT1052" name="MIMXRT1052" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for i.MX RT1050 Derivatives.pdf"/>
        <files mask="MCUXpresso SDK Release Notes_MIMXRT105x.pdf"/>
      </source>
    </component>
    <component id="docs.images.MIMXRT1052" name="images" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="EVKB-IMXRT1050.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.adc_12b1msps_sar.MIMXRT1052" name="adc_12b1msps_sar" brief="ADC Driver" version="2.0.2" full_name="ADC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
    </component>
    <component id="platform.drivers.adc_etc.MIMXRT1052" name="adc_etc" brief="ADC_ETC Driver" version="2.0.1" full_name="ADC_ETC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc_etc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc_etc.h"/>
      </source>
    </component>
    <component id="platform.drivers.aipstz.MIMXRT1052" name="aipstz" brief="aipstz Driver" version="2.0.0" full_name="AIPSTZ Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_aipstz.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_aipstz.h"/>
      </source>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1052" name="aoi" brief="AOI Driver" version="2.0.0" full_name="AOI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
    </component>
    <component id="platform.drivers.bee.MIMXRT1052" name="bee" brief="BEE Driver" version="2.0.0" full_name="BEE Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_bee.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_bee.h"/>
      </source>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1052" name="cache" brief="CACHE Driver" version="2.0.1" full_name="CACHE Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
    </component>
    <component id="driver.camera-common.MIMXRT1052" name="camera-common" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.video-common.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera" target_path="video" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
    </component>
    <component id="driver.camera-device-common.MIMXRT1052" name="camera-device-common" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.camera-common.MIMXRT1052 driver.video-common.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device" target_path="video" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT1052" name="camera-device-mt9m114" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.camera-common.MIMXRT1052 driver.camera-device-common.MIMXRT1052 driver.video-common.MIMXRT1052 driver.video-i2c.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/mt9m114" target_path="video" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source path="components/video/camera/device/mt9m114" target_path="video" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT1052" name="camera-device-ov7725" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.camera-common.MIMXRT1052 driver.camera-device-common.MIMXRT1052 driver.camera-device-sccb.MIMXRT1052 driver.video-common.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/ov7725" target_path="video" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source path="components/video/camera/device/ov7725" target_path="video" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT1052" name="camera-device-sccb" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/sccb" target_path="video" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source path="components/video/camera/device/sccb" target_path="video" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT1052" name="camera-receiver-common" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.camera-common.MIMXRT1052 driver.video-common.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/receiver" target_path="video" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
    </component>
    <component id="driver.camera-receiver-csi.MIMXRT1052" name="camera-receiver-csi" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 driver.camera-common.MIMXRT1052 driver.camera-receiver-common.MIMXRT1052 driver.video-common.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.csi.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/receiver/csi" target_path="video" type="src">
        <files mask="fsl_csi_camera_adapter.c"/>
      </source>
      <source path="components/video/camera/receiver/csi" target_path="video" type="c_include">
        <files mask="fsl_csi_camera_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMXRT1052" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.cmp.MIMXRT1052" name="cmp" brief="CMP Driver" version="2.0.1" full_name="CMP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1052" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.0.0" devices="MIMXRT1052xxxxB" dependency="RTE_Device.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpi2c.MIMXRT1052 platform.drivers.lpi2c_edma.MIMXRT1052" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1052" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.0.0" devices="MIMXRT1052xxxxB" dependency="RTE_Device.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpspi.MIMXRT1052 platform.drivers.lpspi_edma.MIMXRT1052" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_cmsis_edma.MIMXRT1052" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.0.1" devices="MIMXRT1052xxxxB" dependency="RTE_Device.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1052 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052 platform.drivers.lpuart_edma.MIMXRT1052" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1052/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
    </component>
    <component id="driver.codec.MIMXRT1052" name="codec" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMXRT1052" name="common" brief="COMMON Driver" version="2.1.0" full_name="COMMON Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="driver.cs42888.MIMXRT1052" name="cs42888" version="2.1.1" devices="MIMXRT1052xxxxB" dependency="component.codec_i2c.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/cs42888" target_path="codec" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source path="components/codec/cs42888" target_path="codec" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
    </component>
    <component id="platform.drivers.csi.MIMXRT1052" name="csi" brief="CSI Driver" version="2.0.3" full_name="CSI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_csi.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_csi.h"/>
      </source>
    </component>
    <component id="platform.drivers.dcdc_1.MIMXRT1052" name="dcdc_1" brief="DCDC Driver" version="2.0.0" full_name="DCDC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.dcp.MIMXRT1052" name="dcp" brief="DCP Driver" version="2.1.1" full_name="DCP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmamux.MIMXRT1052" name="dmamux" brief="DMAMUX Driver" version="2.0.2" full_name="DMAMUX Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
    </component>
    <component id="platform.drivers.edma.MIMXRT1052" name="edma" brief="EDMA Driver" version="2.1.8" full_name="EDMA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.elcdif.MIMXRT1052" name="elcdif" brief="ELCDIF Driver" version="2.0.1" full_name="ELCDIF Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_elcdif.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_elcdif.h"/>
      </source>
    </component>
    <component id="platform.drivers.enc.MIMXRT1052" name="enc" brief="ENC Driver" version="2.0.0" full_name="ENC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_enc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_enc.h"/>
      </source>
    </component>
    <component id="platform.drivers.enet.MIMXRT1052" name="enet" brief="ENET Driver" version="2.2.4" full_name="ENET Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1052" name="ewm" brief="EWM Driver" version="2.0.1" full_name="EWM Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1052" name="flexcan" brief="FLEXCAN Driver" version="2.4.0" full_name="FLEXCAN Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1052" name="flexio" brief="FLEXIO Driver" version="2.0.2" full_name="FLEXIO Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT1052" name="flexio_camera" brief="FLEXIO Driver" version="2.1.2" full_name="FLEXIO CAMERA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMXRT1052" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.2" full_name="FLEXIO Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.flexio.MIMXRT1052 platform.drivers.flexio_camera.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1052" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.1.8" full_name="FLEXIO I2C Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1052" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.1.5" full_name="FLEXIO I2S Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1052" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.5" full_name="FLEXIO I2S EDMA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.flexio.MIMXRT1052 platform.drivers.flexio_i2s.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT1052" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.2" full_name="FLEXIO MCULCD Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT1052" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.2" full_name="FLEXIO MCULCD EDMA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.flexio.MIMXRT1052 platform.drivers.flexio_mculcd.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1052" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.1.3" full_name="FLEXIO SPI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1052" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.1.3" full_name="FLEXIO SPI EDMA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.flexio.MIMXRT1052 platform.drivers.flexio_spi.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1052" name="flexio_uart" brief="FLEXIO UART Driver" version="2.1.5" full_name="FLEXIO UART Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.flexio.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1052" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.1.5" full_name="FLEXIO UART EDMA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.flexio.MIMXRT1052 platform.drivers.flexio_uart.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexram.MIMXRT1052" name="flexram" brief="FLEXRAM Driver" version="2.0.4" full_name="FLEXRAM Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexram.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexram.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1052" name="flexspi" brief="FLEXSPI Driver" version="2.1.1" full_name="FLEXSPI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
    </component>
    <component id="driver.ft5406_rt.MIMXRT1052" name="ft5406_rt" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.lpi2c.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/ft5406_rt" target_path="touchpanel" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <source path="components/ft5406_rt" target_path="touchpanel" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
    </component>
    <component id="driver.fxos8700cq.MIMXRT1052" name="fxos8700cq" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/fxos8700cq" target_path="accel" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source path="components/fxos8700cq" target_path="accel" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_1.MIMXRT1052" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1052" name="gpt" brief="GPT Driver" version="2.0.0" full_name="GPT Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMXRT1052" name="gpio" brief="GPIO Driver" version="2.0.2" full_name="igpio" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1052" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1052" name="kpp" brief="KPP Driver" version="2.0.0" full_name="KPP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1052" name="i2c" brief="LPI2C Driver" version="2.1.9" full_name="LPI2C Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1052" name="i2c_edma" brief="LPI2C Driver" version="2.1.6" full_name="LPI2C Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpi2c.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1052" name="lpspi" brief="LPSPI Driver" version="2.0.3" full_name="LPSPI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1052" name="lpspi_edma" brief="LPSPI Driver" version="2.0.2" full_name="LPSPI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpspi.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1052" name="lpuart" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1052" name="lpuart_edma" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.lpuart.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.ocotp.MIMXRT1052" name="ocotp" brief="OCOTP Driver" version="2.0.0" full_name="OCOTP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
    </component>
    <component id="driver.phyksz8081.MIMXRT1052" name="phyksz8081" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.enet.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/phyksz8081" target_path="board" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source path="components/phyksz8081" target_path="board" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
    </component>
    <component id="platform.drivers.pit.MIMXRT1052" name="pit" brief="PIT Driver" version="2.0.2" full_name="PIT Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
    </component>
    <component id="platform.drivers.pmu.MIMXRT1052" name="pmu" brief="pmu Driver" version="2.0.0" full_name="pmu Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1052" name="pwm" brief="PWM Driver" version="2.0.0" full_name="PWM Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pxp.MIMXRT1052" name="pxp" brief="PXP Driver" version="2.0.1" full_name="PXP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1052" name="qtmr" brief="QTMR Driver" version="2.0.0" full_name="QTMR Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1052" name="rtwdog" brief="RTWDOG Driver" version="2.1.0" full_name="RTWDOG Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMXRT1052" name="sai" brief="SAI Driver" version="2.2.1" full_name="SAI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1052" name="sai_edma" brief="SAI Driver" version="2.2.0" full_name="SAI Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.sai.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.semc.MIMXRT1052" name="semc" brief="SEMC Driver" version="2.0.4" full_name="SEMC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
    </component>
    <component id="platform.drivers.snvs_hp.MIMXRT1052" name="snvs_hp" brief="SNVS HP Driver" version="2.1.2" full_name="SNVS HP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_snvs_hp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_snvs_hp.h"/>
      </source>
    </component>
    <component id="platform.drivers.snvs_lp.MIMXRT1052" name="snvs_lp" brief="SNVS LP Driver" version="2.1.0" full_name="SNVS LP Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_snvs_lp.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_snvs_lp.h"/>
      </source>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1052" name="spdif" brief="SPDIF Driver" version="2.0.2" full_name="SPDIF Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1052" name="spdif_edma" brief="SPDIF Driver" version="2.0.0" full_name="SPDIF Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.dmamux.MIMXRT1052 platform.drivers.edma.MIMXRT1052 platform.drivers.spdif.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.src.MIMXRT1052" name="src" brief="SRC Driver" version="2.0.1" full_name="SRC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_src.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_src.h"/>
      </source>
    </component>
    <component id="platform.drivers.tempmon.MIMXRT1052" name="tempmon" brief="TEMPMON Driver" version="2.0.0" full_name="TEMPMON Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_tempmon.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tempmon.h"/>
      </source>
    </component>
    <component id="platform.drivers.trng.MIMXRT1052" name="trng" brief="TRNG Driver" version="2.0.4" full_name="TRNG Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
    </component>
    <component id="platform.drivers.tsc.MIMXRT1052" name="tsc" brief="TSC Driver" version="2.0.2" full_name="TSC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_tsc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tsc.h"/>
      </source>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1052" name="sdhc" brief="USDHC Driver" version="2.2.8" full_name="USDHC Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
    </component>
    <component id="driver.video-common.MIMXRT1052" name="video-common" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video" target_path="video" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source path="components/video" target_path="video" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
    </component>
    <component id="driver.video-i2c.MIMXRT1052" name="video-i2c" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/i2c" target_path="video" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source path="components/video/i2c" target_path="video" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMXRT1052" name="wdog" brief="wdog01 Driver" version="2.1.0" full_name="wdog01 Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="driver.wm8960.MIMXRT1052" name="wm8960" version="2.1.0" devices="MIMXRT1052xxxxB" dependency="component.codec_i2c.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/wm8960" target_path="codec" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source path="components/codec/wm8960" target_path="codec" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
    </component>
    <component id="platform.drivers.xbara.MIMXRT1052" name="xbara" brief="XBARA Driver" version="2.0.4" full_name="XBARA Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_xbara.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_xbara.h"/>
      </source>
    </component>
    <component id="platform.drivers.xbarb.MIMXRT1052" name="xbarb" brief="XBARB Driver" version="2.0.1" full_name="XBARB Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_xbarb.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_xbarb.h"/>
      </source>
    </component>
    <component id="platform.drivers.xip_board.MIMXRT1052" name="xip_board" brief="XIP Board Driver" version="2.0.0" full_name="XIP Board Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" category="Device/SDK Drivers" user_visible="true" type="other">
      <defines>
        <define name="XIP_EXTERNAL_FLASH=1" value=""/>
        <define name="XIP_BOOT_HEADER_ENABLE=1" value=""/>
      </defines>
      <source path="boards/evkbimxrt1050/xip" target_path="xip" type="src">
        <files mask="evkbimxrt1050_flexspi_nor_config.c"/>
        <files mask="evkbimxrt1050_sdram_ini_dcd.c"/>
      </source>
      <source path="boards/evkbimxrt1050/xip" target_path="xip" type="c_include">
        <files mask="evkbimxrt1050_flexspi_nor_config.h"/>
        <files mask="evkbimxrt1050_sdram_ini_dcd.h"/>
      </source>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1052" name="xip_device" brief="XIP Device Driver" version="2.0.0" full_name="XIP Device Driver" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="driver">
      <defines>
        <define name="XIP_EXTERNAL_FLASH=1" value=""/>
        <define name="XIP_BOOT_HEADER_ENABLE=1" value=""/>
      </defines>
      <source path="devices/MIMXRT1052/xip" target_path="xip" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source path="devices/MIMXRT1052/xip" target_path="xip" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMXRT1052" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMXRT1052xxxxB" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.eiq.cmsis_nn.MIMXRT1052" name="CMSIS-NN" brief="CMSIS-NN library" version="1.0.0" full_name="CMSIS-NN library" devices="MIMXRT1052xxxxB" dependency="platform.CMSIS_DSP_Lib.arm_cortexM7lfdp_math.MIMXRT1052" category="Machine Learning/eIQ" user_visible="true" type="middleware">
      <source path="middleware/eiq/cmsis-nn/Include" target_path="CMSIS/NN/Include" type="c_include">
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source path="middleware/eiq/cmsis-nn" target_path="CMSIS/NN" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/ActivationFunctions" target_path="CMSIS/NN/ActivationFunctions" type="src">
        <files mask="arm_nn_activations_q15.c"/>
        <files mask="arm_nn_activations_q7.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/ConvolutionFunctions" target_path="CMSIS/NN/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q15_basic.c"/>
        <files mask="arm_convolve_HWC_q15_fast.c"/>
        <files mask="arm_convolve_HWC_q15_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_RGB.c"/>
        <files mask="arm_convolve_HWC_q7_basic.c"/>
        <files mask="arm_convolve_HWC_q7_basic_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_fast.c"/>
        <files mask="arm_convolve_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7_nonsquare.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15_reordered.c"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/FullyConnectedFunctions" target_path="CMSIS/NN/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_mat_q7_vec_q15.c"/>
        <files mask="arm_fully_connected_mat_q7_vec_q15_opt.c"/>
        <files mask="arm_fully_connected_q15.c"/>
        <files mask="arm_fully_connected_q15_opt.c"/>
        <files mask="arm_fully_connected_q7.c"/>
        <files mask="arm_fully_connected_q7_opt.c"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/NNSupportFunctions" target_path="CMSIS/NN/NNSupportFunctions" type="src">
        <files mask="arm_nn_mult_q15.c"/>
        <files mask="arm_nn_mult_q7.c"/>
        <files mask="arm_nntables.c"/>
        <files mask="arm_q7_to_q15_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_no_shift.c"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/PoolingFunctions" target_path="CMSIS/NN/PoolingFunctions" type="src">
        <files mask="arm_pool_q7_HWC.c"/>
      </source>
      <source path="middleware/eiq/cmsis-nn/Source/SoftmaxFunctions" target_path="CMSIS/NN/SoftmaxFunctions" type="src">
        <files mask="arm_softmax_q15.c"/>
        <files mask="arm_softmax_q7.c"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite.MIMXRT1052" name="TensorFlow Lite" brief="TensorFlow Lite library" version="1.11.0" full_name="TensorFlow Lite library" devices="MIMXRT1052xxxxB" dependency="middleware.eiq.tensorflow_lite.third_party.eigen.MIMXRT1052 middleware.eiq.tensorflow_lite.third_party.farmhash.MIMXRT1052 middleware.eiq.tensorflow_lite.third_party.fft2d.MIMXRT1052 middleware.eiq.tensorflow_lite.third_party.flatbuffers.MIMXRT1052 middleware.eiq.tensorflow_lite.third_party.gemmlowp.MIMXRT1052" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite" target_path="tensorflow-lite" type="doc">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite" target_path="tensorflow-lite/tensorflow/contrib/lite" type="c_include">
        <files mask="_string.h"/>
        <files mask="allocation.h"/>
        <files mask="arena_planner.h"/>
        <files mask="builtin_op_data.h"/>
        <files mask="builtin_ops.h"/>
        <files mask="context.h"/>
        <files mask="context_util.h"/>
        <files mask="error_reporter.h"/>
        <files mask="graph_info.h"/>
        <files mask="interpreter.h"/>
        <files mask="memory_planner.h"/>
        <files mask="model.h"/>
        <files mask="nnapi_delegate.h"/>
        <files mask="op_resolver.h"/>
        <files mask="optional_debug_tools.h"/>
        <files mask="simple_memory_arena.h"/>
        <files mask="string_util.h"/>
        <files mask="util.h"/>
        <files mask="version.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite" target_path="tensorflow-lite/tensorflow/contrib/lite" type="src">
        <files mask="allocation.cc"/>
        <files mask="arena_planner.cc"/>
        <files mask="context.c"/>
        <files mask="error_reporter.cc"/>
        <files mask="graph_info.cc"/>
        <files mask="interpreter.cc"/>
        <files mask="mmap_allocation_disabled.cc"/>
        <files mask="model.cc"/>
        <files mask="nnapi_delegate_disabled.cc"/>
        <files mask="op_resolver.cc"/>
        <files mask="optional_debug_tools.cc"/>
        <files mask="simple_memory_arena.cc"/>
        <files mask="string_util.cc"/>
        <files mask="util.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels" type="c_include">
        <files mask="activation_functor.h"/>
        <files mask="eigen_support.h"/>
        <files mask="gemm_support.h"/>
        <files mask="kernel_util.h"/>
        <files mask="op_macros.h"/>
        <files mask="padding.h"/>
        <files mask="register.h"/>
        <files mask="test_util.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels" type="src">
        <files mask="activations.cc"/>
        <files mask="add.cc"/>
        <files mask="arg_min_max.cc"/>
        <files mask="audio_spectrogram.cc"/>
        <files mask="basic_rnn.cc"/>
        <files mask="batch_to_space_nd.cc"/>
        <files mask="bidirectional_sequence_lstm.cc"/>
        <files mask="bidirectional_sequence_rnn.cc"/>
        <files mask="cast.cc"/>
        <files mask="comparisons.cc"/>
        <files mask="concatenation.cc"/>
        <files mask="conv.cc"/>
        <files mask="depthwise_conv.cc"/>
        <files mask="dequantize.cc"/>
        <files mask="detection_postprocess.cc"/>
        <files mask="div.cc"/>
        <files mask="eigen_support.cc"/>
        <files mask="elementwise.cc"/>
        <files mask="embedding_lookup.cc"/>
        <files mask="embedding_lookup_sparse.cc"/>
        <files mask="exp.cc"/>
        <files mask="expand_dims.cc"/>
        <files mask="fake_quant.cc"/>
        <files mask="floor.cc"/>
        <files mask="floor_div.cc"/>
        <files mask="fully_connected.cc"/>
        <files mask="gather.cc"/>
        <files mask="gemm_support.cc"/>
        <files mask="hashtable_lookup.cc"/>
        <files mask="kernel_util.cc"/>
        <files mask="l2norm.cc"/>
        <files mask="local_response_norm.cc"/>
        <files mask="logical.cc"/>
        <files mask="lsh_projection.cc"/>
        <files mask="lstm.cc"/>
        <files mask="maximum_minimum.cc"/>
        <files mask="mfcc.cc"/>
        <files mask="mul.cc"/>
        <files mask="neg.cc"/>
        <files mask="one_hot.cc"/>
        <files mask="pack.cc"/>
        <files mask="pad.cc"/>
        <files mask="pooling.cc"/>
        <files mask="pow.cc"/>
        <files mask="reduce.cc"/>
        <files mask="register.cc"/>
        <files mask="reshape.cc"/>
        <files mask="resize_bilinear.cc"/>
        <files mask="select.cc"/>
        <files mask="shape.cc"/>
        <files mask="skip_gram.cc"/>
        <files mask="slice.cc"/>
        <files mask="space_to_batch_nd.cc"/>
        <files mask="space_to_depth.cc"/>
        <files mask="sparse_to_dense.cc"/>
        <files mask="split.cc"/>
        <files mask="squeeze.cc"/>
        <files mask="strided_slice.cc"/>
        <files mask="sub.cc"/>
        <files mask="svdf.cc"/>
        <files mask="tile.cc"/>
        <files mask="topk_v2.cc"/>
        <files mask="transpose.cc"/>
        <files mask="transpose_conv.cc"/>
        <files mask="unidirectional_sequence_lstm.cc"/>
        <files mask="unidirectional_sequence_rnn.cc"/>
        <files mask="unpack.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal" type="c_include">
        <files mask="common.h"/>
        <files mask="compatibility.h"/>
        <files mask="kernel_utils.h"/>
        <files mask="mfcc.h"/>
        <files mask="mfcc_dct.h"/>
        <files mask="mfcc_mel_filterbank.h"/>
        <files mask="quantization_util.h"/>
        <files mask="round.h"/>
        <files mask="spectrogram.h"/>
        <files mask="strided_slice_logic.h"/>
        <files mask="tensor.h"/>
        <files mask="tensor_utils.h"/>
        <files mask="test_util.h"/>
        <files mask="types.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal" type="src">
        <files mask="kernel_utils.cc"/>
        <files mask="mfcc_dct.cc"/>
        <files mask="mfcc_internal.cc"/>
        <files mask="mfcc_mel_filterbank.cc"/>
        <files mask="quantization_util.cc"/>
        <files mask="spectrogram.cc"/>
        <files mask="tensor_utils.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal/optimized" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal/optimized" type="c_include">
        <files mask="cblas_conv.h"/>
        <files mask="cblas_reference.h"/>
        <files mask="cpu_check.h"/>
        <files mask="depthwiseconv_float.h"/>
        <files mask="depthwiseconv_uint8.h"/>
        <files mask="depthwiseconv_uint8_3x3_filter.h"/>
        <files mask="eigen_spatial_convolutions.h"/>
        <files mask="eigen_tensor_reduced_instantiations_google.h"/>
        <files mask="eigen_tensor_reduced_instantiations_oss.h"/>
        <files mask="legacy_optimized_ops.h"/>
        <files mask="multithreaded_conv.h"/>
        <files mask="neon_tensor_utils.h"/>
        <files mask="optimized_ops.h"/>
        <files mask="tensor_utils_impl.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal/optimized" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal/optimized" type="src">
        <files mask="neon_tensor_utils.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal/reference" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal/reference" type="c_include">
        <files mask="depthwiseconv_float.h"/>
        <files mask="depthwiseconv_uint8.h"/>
        <files mask="legacy_reference_ops.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="reference_ops.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels/internal/reference" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels/internal/reference" type="src">
        <files mask="portable_tensor_utils.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/nnapi" target_path="tensorflow-lite/tensorflow/contrib/lite/nnapi" type="c_include">
        <files mask="NeuralNetworksShim.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/profiling" target_path="tensorflow-lite/tensorflow/contrib/lite/profiling" type="c_include">
        <files mask="_time.h"/>
        <files mask="profile_buffer.h"/>
        <files mask="profile_summarizer.h"/>
        <files mask="profiler.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/profiling" target_path="tensorflow-lite/tensorflow/contrib/lite/profiling" type="src">
        <files mask="profile_summarizer.cc"/>
        <files mask="time.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/schema" target_path="tensorflow-lite/tensorflow/contrib/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/core/util" target_path="tensorflow-lite/tensorflow/core/util" type="c_include">
        <files mask="stat_summarizer_options.h"/>
        <files mask="stats_calculator.h"/>
      </source>
      <include_paths>
        <include_path path="tensorflow-lite"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite.binary.MIMXRT1052" name="TensorFlow Lite" brief="TensorFlow Lite library" version="1.11.0" full_name="TensorFlow Lite library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="true" type="middleware">
      <source toolchain="armgcc" path="middleware/eiq/tensorflow-lite/lib/cm7/gcc" target_path="libs" type="lib">
        <files mask="libtensorflow-lite.a"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite" target_path="tensorflow-lite/tensorflow/contrib/lite" type="c_include">
        <files mask="_string.h"/>
        <files mask="allocation.h"/>
        <files mask="arena_planner.h"/>
        <files mask="builtin_op_data.h"/>
        <files mask="builtin_ops.h"/>
        <files mask="context.h"/>
        <files mask="context_util.h"/>
        <files mask="error_reporter.h"/>
        <files mask="graph_info.h"/>
        <files mask="interpreter.h"/>
        <files mask="memory_planner.h"/>
        <files mask="model.h"/>
        <files mask="nnapi_delegate.h"/>
        <files mask="op_resolver.h"/>
        <files mask="optional_debug_tools.h"/>
        <files mask="simple_memory_arena.h"/>
        <files mask="string_util.h"/>
        <files mask="util.h"/>
        <files mask="version.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/kernels" target_path="tensorflow-lite/tensorflow/contrib/lite/kernels" type="c_include">
        <files mask="register.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/profiling" target_path="tensorflow-lite/tensorflow/contrib/lite/profiling" type="c_include">
        <files mask="_time.h"/>
        <files mask="profile_buffer.h"/>
        <files mask="profile_summarizer.h"/>
        <files mask="profiler.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/tensorflow/contrib/lite/schema" target_path="tensorflow-lite/tensorflow/contrib/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers" target_path="tensorflow-lite/third_party/flatbuffers/include/flatbuffers" type="c_include">
        <files mask="base.h"/>
        <files mask="code_generators.h"/>
        <files mask="flatbuffers.h"/>
        <files mask="flexbuffers.h"/>
        <files mask="hash.h"/>
        <files mask="idl.h"/>
        <files mask="minireflect.h"/>
        <files mask="reflection.h"/>
        <files mask="reflection_generated.h"/>
        <files mask="registry.h"/>
        <files mask="stl_emulation.h"/>
        <files mask="util.h"/>
      </source>
      <include_paths>
        <include_path path="tensorflow-lite"/>
        <include_path path="tensorflow-lite/third_party/flatbuffers/include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite.third_party.eigen.MIMXRT1052" name="Eigen" brief="Eigen library" version="3.3" full_name="Eigen library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen" target_path="tensorflow-lite/third_party/eigen" type="doc">
        <files mask="COPYING.BSD"/>
        <files mask="COPYING.LGPL"/>
        <files mask="COPYING.MINPACK"/>
        <files mask="COPYING.MPL2"/>
        <files mask="COPYING.README"/>
        <files mask="README.md"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen" target_path="tensorflow-lite/third_party/eigen/Eigen" type="c_include">
        <files mask="Cholesky"/>
        <files mask="CholmodSupport"/>
        <files mask="Core"/>
        <files mask="Dense"/>
        <files mask="Eigen"/>
        <files mask="Eigenvalues"/>
        <files mask="Geometry"/>
        <files mask="Householder"/>
        <files mask="IterativeLinearSolvers"/>
        <files mask="Jacobi"/>
        <files mask="KLUSupport"/>
        <files mask="LU"/>
        <files mask="MetisSupport"/>
        <files mask="OrderingMethods"/>
        <files mask="PaStiXSupport"/>
        <files mask="PardisoSupport"/>
        <files mask="QR"/>
        <files mask="QtAlignedMalloc"/>
        <files mask="SPQRSupport"/>
        <files mask="SVD"/>
        <files mask="Sparse"/>
        <files mask="SparseCholesky"/>
        <files mask="SparseCore"/>
        <files mask="SparseLU"/>
        <files mask="SparseQR"/>
        <files mask="StdDeque"/>
        <files mask="StdList"/>
        <files mask="StdVector"/>
        <files mask="SuperLUSupport"/>
        <files mask="UmfPackSupport"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Cholesky" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Cholesky" type="c_include">
        <files mask="LDLT.h"/>
        <files mask="LLT.h"/>
        <files mask="LLT_LAPACKE.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/CholmodSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/CholmodSupport" type="c_include">
        <files mask="CholmodSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core" type="c_include">
        <files mask="ArithmeticSequence.h"/>
        <files mask="Array.h"/>
        <files mask="ArrayBase.h"/>
        <files mask="ArrayWrapper.h"/>
        <files mask="Assign.h"/>
        <files mask="AssignEvaluator.h"/>
        <files mask="Assign_MKL.h"/>
        <files mask="BandMatrix.h"/>
        <files mask="Block.h"/>
        <files mask="BooleanRedux.h"/>
        <files mask="CommaInitializer.h"/>
        <files mask="ConditionEstimator.h"/>
        <files mask="CoreEvaluators.h"/>
        <files mask="CoreIterators.h"/>
        <files mask="CwiseBinaryOp.h"/>
        <files mask="CwiseNullaryOp.h"/>
        <files mask="CwiseTernaryOp.h"/>
        <files mask="CwiseUnaryOp.h"/>
        <files mask="CwiseUnaryView.h"/>
        <files mask="DenseBase.h"/>
        <files mask="DenseCoeffsBase.h"/>
        <files mask="DenseStorage.h"/>
        <files mask="Diagonal.h"/>
        <files mask="DiagonalMatrix.h"/>
        <files mask="DiagonalProduct.h"/>
        <files mask="Dot.h"/>
        <files mask="EigenBase.h"/>
        <files mask="ForceAlignedAccess.h"/>
        <files mask="Fuzzy.h"/>
        <files mask="GeneralProduct.h"/>
        <files mask="GenericPacketMath.h"/>
        <files mask="GlobalFunctions.h"/>
        <files mask="IO.h"/>
        <files mask="IndexedView.h"/>
        <files mask="Inverse.h"/>
        <files mask="Map.h"/>
        <files mask="MapBase.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="MathFunctionsImpl.h"/>
        <files mask="Matrix.h"/>
        <files mask="MatrixBase.h"/>
        <files mask="NestByValue.h"/>
        <files mask="NoAlias.h"/>
        <files mask="NumTraits.h"/>
        <files mask="PermutationMatrix.h"/>
        <files mask="PlainObjectBase.h"/>
        <files mask="Product.h"/>
        <files mask="ProductEvaluators.h"/>
        <files mask="Random.h"/>
        <files mask="Redux.h"/>
        <files mask="Ref.h"/>
        <files mask="Replicate.h"/>
        <files mask="ReturnByValue.h"/>
        <files mask="Reverse.h"/>
        <files mask="Select.h"/>
        <files mask="SelfAdjointView.h"/>
        <files mask="SelfCwiseBinaryOp.h"/>
        <files mask="Solve.h"/>
        <files mask="SolveTriangular.h"/>
        <files mask="SolverBase.h"/>
        <files mask="StableNorm.h"/>
        <files mask="Stride.h"/>
        <files mask="Swap.h"/>
        <files mask="Transpose.h"/>
        <files mask="Transpositions.h"/>
        <files mask="TriangularMatrix.h"/>
        <files mask="VectorBlock.h"/>
        <files mask="VectorwiseOp.h"/>
        <files mask="Visitor.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AVX" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AVX" type="c_include">
        <files mask="Complex.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
        <files mask="TypeCasting.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AVX512" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AVX512" type="c_include">
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AltiVec" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/AltiVec" type="c_include">
        <files mask="Complex.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/CUDA" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/CUDA" type="c_include">
        <files mask="Complex.h"/>
        <files mask="Half.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
        <files mask="PacketMathHalf.h"/>
        <files mask="TypeCasting.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/Default" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/Default" type="c_include">
        <files mask="ConjHelper.h"/>
        <files mask="Settings.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/NEON" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/NEON" type="c_include">
        <files mask="Complex.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/SSE" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/SSE" type="c_include">
        <files mask="Complex.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
        <files mask="TypeCasting.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/ZVector" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/arch/ZVector" type="c_include">
        <files mask="Complex.h"/>
        <files mask="MathFunctions.h"/>
        <files mask="PacketMath.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/functors" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/functors" type="c_include">
        <files mask="AssignmentFunctors.h"/>
        <files mask="BinaryFunctors.h"/>
        <files mask="NullaryFunctors.h"/>
        <files mask="StlFunctors.h"/>
        <files mask="TernaryFunctors.h"/>
        <files mask="UnaryFunctors.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/products" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/products" type="c_include">
        <files mask="GeneralBlockPanelKernel.h"/>
        <files mask="GeneralMatrixMatrix.h"/>
        <files mask="GeneralMatrixMatrixTriangular.h"/>
        <files mask="GeneralMatrixMatrixTriangular_BLAS.h"/>
        <files mask="GeneralMatrixMatrix_BLAS.h"/>
        <files mask="GeneralMatrixVector.h"/>
        <files mask="GeneralMatrixVector_BLAS.h"/>
        <files mask="Parallelizer.h"/>
        <files mask="SelfadjointMatrixMatrix.h"/>
        <files mask="SelfadjointMatrixMatrix_BLAS.h"/>
        <files mask="SelfadjointMatrixVector.h"/>
        <files mask="SelfadjointMatrixVector_BLAS.h"/>
        <files mask="SelfadjointProduct.h"/>
        <files mask="SelfadjointRank2Update.h"/>
        <files mask="TriangularMatrixMatrix.h"/>
        <files mask="TriangularMatrixMatrix_BLAS.h"/>
        <files mask="TriangularMatrixVector.h"/>
        <files mask="TriangularMatrixVector_BLAS.h"/>
        <files mask="TriangularSolverMatrix.h"/>
        <files mask="TriangularSolverMatrix_BLAS.h"/>
        <files mask="TriangularSolverVector.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Core/util" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Core/util" type="c_include">
        <files mask="BlasUtil.h"/>
        <files mask="Constants.h"/>
        <files mask="DisableStupidWarnings.h"/>
        <files mask="ForwardDeclarations.h"/>
        <files mask="IndexedViewHelper.h"/>
        <files mask="IntegralConstant.h"/>
        <files mask="MKL_support.h"/>
        <files mask="Macros.h"/>
        <files mask="Memory.h"/>
        <files mask="Meta.h"/>
        <files mask="NonMPL2.h"/>
        <files mask="ReenableStupidWarnings.h"/>
        <files mask="StaticAssert.h"/>
        <files mask="SymbolicIndex.h"/>
        <files mask="XprHelper.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Eigenvalues" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Eigenvalues" type="c_include">
        <files mask="ComplexEigenSolver.h"/>
        <files mask="ComplexSchur.h"/>
        <files mask="ComplexSchur_LAPACKE.h"/>
        <files mask="EigenSolver.h"/>
        <files mask="GeneralizedEigenSolver.h"/>
        <files mask="GeneralizedSelfAdjointEigenSolver.h"/>
        <files mask="HessenbergDecomposition.h"/>
        <files mask="MatrixBaseEigenvalues.h"/>
        <files mask="RealQZ.h"/>
        <files mask="RealSchur.h"/>
        <files mask="RealSchur_LAPACKE.h"/>
        <files mask="SelfAdjointEigenSolver.h"/>
        <files mask="SelfAdjointEigenSolver_LAPACKE.h"/>
        <files mask="Tridiagonalization.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Geometry" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Geometry" type="c_include">
        <files mask="AlignedBox.h"/>
        <files mask="AngleAxis.h"/>
        <files mask="EulerAngles.h"/>
        <files mask="Homogeneous.h"/>
        <files mask="Hyperplane.h"/>
        <files mask="OrthoMethods.h"/>
        <files mask="ParametrizedLine.h"/>
        <files mask="Quaternion.h"/>
        <files mask="Rotation2D.h"/>
        <files mask="RotationBase.h"/>
        <files mask="Scaling.h"/>
        <files mask="Transform.h"/>
        <files mask="Translation.h"/>
        <files mask="Umeyama.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Geometry/arch" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Geometry/arch" type="c_include">
        <files mask="Geometry_SSE.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Householder" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Householder" type="c_include">
        <files mask="BlockHouseholder.h"/>
        <files mask="Householder.h"/>
        <files mask="HouseholderSequence.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/IterativeLinearSolvers" target_path="tensorflow-lite/third_party/eigen/Eigen/src/IterativeLinearSolvers" type="c_include">
        <files mask="BasicPreconditioners.h"/>
        <files mask="BiCGSTAB.h"/>
        <files mask="ConjugateGradient.h"/>
        <files mask="IncompleteCholesky.h"/>
        <files mask="IterativeSolverBase.h"/>
        <files mask="LeastSquareConjugateGradient.h"/>
        <files mask="SolveWithGuess.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/Jacobi" target_path="tensorflow-lite/third_party/eigen/Eigen/src/Jacobi" type="c_include">
        <files mask="Jacobi.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/KLUSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/KLUSupport" type="c_include">
        <files mask="KLUSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/LU" target_path="tensorflow-lite/third_party/eigen/Eigen/src/LU" type="c_include">
        <files mask="Determinant.h"/>
        <files mask="FullPivLU.h"/>
        <files mask="InverseImpl.h"/>
        <files mask="PartialPivLU.h"/>
        <files mask="PartialPivLU_LAPACKE.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/LU/arch" target_path="tensorflow-lite/third_party/eigen/Eigen/src/LU/arch" type="c_include">
        <files mask="Inverse_SSE.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/MetisSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/MetisSupport" type="c_include">
        <files mask="MetisSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/OrderingMethods" target_path="tensorflow-lite/third_party/eigen/Eigen/src/OrderingMethods" type="c_include">
        <files mask="Eigen_Colamd.h"/>
        <files mask="Ordering.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/PaStiXSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/PaStiXSupport" type="c_include">
        <files mask="PaStiXSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/PardisoSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/PardisoSupport" type="c_include">
        <files mask="PardisoSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/QR" target_path="tensorflow-lite/third_party/eigen/Eigen/src/QR" type="c_include">
        <files mask="ColPivHouseholderQR.h"/>
        <files mask="ColPivHouseholderQR_LAPACKE.h"/>
        <files mask="CompleteOrthogonalDecomposition.h"/>
        <files mask="FullPivHouseholderQR.h"/>
        <files mask="HouseholderQR.h"/>
        <files mask="HouseholderQR_LAPACKE.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SPQRSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SPQRSupport" type="c_include">
        <files mask="SuiteSparseQRSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SVD" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SVD" type="c_include">
        <files mask="BDCSVD.h"/>
        <files mask="JacobiSVD.h"/>
        <files mask="JacobiSVD_LAPACKE.h"/>
        <files mask="SVDBase.h"/>
        <files mask="UpperBidiagonalization.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SparseCholesky" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SparseCholesky" type="c_include">
        <files mask="SimplicialCholesky.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SparseCore" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SparseCore" type="c_include">
        <files mask="AmbiVector.h"/>
        <files mask="CompressedStorage.h"/>
        <files mask="ConservativeSparseSparseProduct.h"/>
        <files mask="MappedSparseMatrix.h"/>
        <files mask="SparseAssign.h"/>
        <files mask="SparseBlock.h"/>
        <files mask="SparseColEtree.h"/>
        <files mask="SparseCompressedBase.h"/>
        <files mask="SparseCwiseBinaryOp.h"/>
        <files mask="SparseCwiseUnaryOp.h"/>
        <files mask="SparseDenseProduct.h"/>
        <files mask="SparseDiagonalProduct.h"/>
        <files mask="SparseDot.h"/>
        <files mask="SparseFuzzy.h"/>
        <files mask="SparseMap.h"/>
        <files mask="SparseMatrix.h"/>
        <files mask="SparseMatrixBase.h"/>
        <files mask="SparsePermutation.h"/>
        <files mask="SparseProduct.h"/>
        <files mask="SparseRedux.h"/>
        <files mask="SparseRef.h"/>
        <files mask="SparseSelfAdjointView.h"/>
        <files mask="SparseSolverBase.h"/>
        <files mask="SparseSparseProductWithPruning.h"/>
        <files mask="SparseTranspose.h"/>
        <files mask="SparseTriangularView.h"/>
        <files mask="SparseUtil.h"/>
        <files mask="SparseVector.h"/>
        <files mask="SparseView.h"/>
        <files mask="TriangularSolver.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SparseLU" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SparseLU" type="c_include">
        <files mask="SparseLU.h"/>
        <files mask="SparseLUImpl.h"/>
        <files mask="SparseLU_Memory.h"/>
        <files mask="SparseLU_Structs.h"/>
        <files mask="SparseLU_SupernodalMatrix.h"/>
        <files mask="SparseLU_Utils.h"/>
        <files mask="SparseLU_column_bmod.h"/>
        <files mask="SparseLU_column_dfs.h"/>
        <files mask="SparseLU_copy_to_ucol.h"/>
        <files mask="SparseLU_gemm_kernel.h"/>
        <files mask="SparseLU_heap_relax_snode.h"/>
        <files mask="SparseLU_kernel_bmod.h"/>
        <files mask="SparseLU_panel_bmod.h"/>
        <files mask="SparseLU_panel_dfs.h"/>
        <files mask="SparseLU_pivotL.h"/>
        <files mask="SparseLU_pruneL.h"/>
        <files mask="SparseLU_relax_snode.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SparseQR" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SparseQR" type="c_include">
        <files mask="SparseQR.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/StlSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/StlSupport" type="c_include">
        <files mask="StdDeque.h"/>
        <files mask="StdList.h"/>
        <files mask="StdVector.h"/>
        <files mask="details.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/SuperLUSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/SuperLUSupport" type="c_include">
        <files mask="SuperLUSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/UmfPackSupport" target_path="tensorflow-lite/third_party/eigen/Eigen/src/UmfPackSupport" type="c_include">
        <files mask="UmfPackSupport.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/misc" target_path="tensorflow-lite/third_party/eigen/Eigen/src/misc" type="c_include">
        <files mask="Image.h"/>
        <files mask="Kernel.h"/>
        <files mask="RealSvd2x2.h"/>
        <files mask="blas.h"/>
        <files mask="lapack.h"/>
        <files mask="lapacke.h"/>
        <files mask="lapacke_mangling.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/Eigen/src/plugins" target_path="tensorflow-lite/third_party/eigen/Eigen/src/plugins" type="c_include">
        <files mask="ArrayCwiseBinaryOps.h"/>
        <files mask="ArrayCwiseUnaryOps.h"/>
        <files mask="BlockMethods.h"/>
        <files mask="CommonCwiseBinaryOps.h"/>
        <files mask="CommonCwiseUnaryOps.h"/>
        <files mask="IndexedViewMethods.h"/>
        <files mask="MatrixCwiseBinaryOps.h"/>
        <files mask="MatrixCwiseUnaryOps.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen" target_path="tensorflow-lite/third_party/eigen" type="c_include">
        <files mask="Empty.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/blas" target_path="tensorflow-lite/third_party/eigen/blas" type="c_include">
        <files mask="BandTriangularSolver.h"/>
        <files mask="GeneralRank1Update.h"/>
        <files mask="PackedSelfadjointProduct.h"/>
        <files mask="PackedTriangularMatrixVector.h"/>
        <files mask="PackedTriangularSolverVector.h"/>
        <files mask="Rank2Update.h"/>
        <files mask="common.h"/>
        <files mask="level1_cplx_impl.h"/>
        <files mask="level1_impl.h"/>
        <files mask="level1_real_impl.h"/>
        <files mask="level2_cplx_impl.h"/>
        <files mask="level2_impl.h"/>
        <files mask="level2_real_impl.h"/>
        <files mask="level3_impl.h"/>
      </source>
      <source exclude="true" path="middleware/eiq/tensorflow-lite/third_party/eigen/blas" target_path="tensorflow-lite/third_party/eigen/blas" type="src">
        <files mask="complex_double.cpp"/>
        <files mask="complex_single.cpp"/>
        <files mask="double.cpp"/>
        <files mask="single.cpp"/>
        <files mask="xerbla.cpp"/>
      </source>
      <source exclude="true" path="middleware/eiq/tensorflow-lite/third_party/eigen/blas/f2c" target_path="tensorflow-lite/third_party/eigen/blas/f2c" type="src">
        <files mask="chbmv.c"/>
        <files mask="chpmv.c"/>
        <files mask="complexdots.c"/>
        <files mask="ctbmv.c"/>
        <files mask="d_cnjg.c"/>
        <files mask="drotm.c"/>
        <files mask="drotmg.c"/>
        <files mask="dsbmv.c"/>
        <files mask="dspmv.c"/>
        <files mask="dtbmv.c"/>
        <files mask="lsame.c"/>
        <files mask="r_cnjg.c"/>
        <files mask="srotm.c"/>
        <files mask="srotmg.c"/>
        <files mask="ssbmv.c"/>
        <files mask="sspmv.c"/>
        <files mask="stbmv.c"/>
        <files mask="zhbmv.c"/>
        <files mask="zhpmv.c"/>
        <files mask="ztbmv.c"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/blas/f2c" target_path="tensorflow-lite/third_party/eigen/blas/f2c" type="c_include">
        <files mask="datatypes.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen" type="c_include">
        <files mask="AdolcForward"/>
        <files mask="AlignedVector3"/>
        <files mask="ArpackSupport"/>
        <files mask="AutoDiff"/>
        <files mask="BVH"/>
        <files mask="EulerAngles"/>
        <files mask="IterativeSolvers"/>
        <files mask="KroneckerProduct"/>
        <files mask="LevenbergMarquardt"/>
        <files mask="MatrixFunctions"/>
        <files mask="MoreVectorization"/>
        <files mask="NonLinearOptimization"/>
        <files mask="NumericalDiff"/>
        <files mask="OpenGLSupport"/>
        <files mask="Polynomials"/>
        <files mask="Skyline"/>
        <files mask="SparseExtra"/>
        <files mask="SpecialFunctions"/>
        <files mask="Splines"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11" type="c_include">
        <files mask="Tensor"/>
        <files mask="TensorSymmetry"/>
        <files mask="ThreadPool"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/Tensor" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/Tensor" type="c_include">
        <files mask="Tensor.h"/>
        <files mask="TensorArgMax.h"/>
        <files mask="TensorArgMaxSycl.h"/>
        <files mask="TensorAssign.h"/>
        <files mask="TensorBase.h"/>
        <files mask="TensorBroadcasting.h"/>
        <files mask="TensorChipping.h"/>
        <files mask="TensorConcatenation.h"/>
        <files mask="TensorContraction.h"/>
        <files mask="TensorContractionBlocking.h"/>
        <files mask="TensorContractionCuda.h"/>
        <files mask="TensorContractionMapper.h"/>
        <files mask="TensorContractionSycl.h"/>
        <files mask="TensorContractionThreadPool.h"/>
        <files mask="TensorConversion.h"/>
        <files mask="TensorConvolution.h"/>
        <files mask="TensorConvolutionSycl.h"/>
        <files mask="TensorCostModel.h"/>
        <files mask="TensorCustomOp.h"/>
        <files mask="TensorDevice.h"/>
        <files mask="TensorDeviceCuda.h"/>
        <files mask="TensorDeviceDefault.h"/>
        <files mask="TensorDeviceSycl.h"/>
        <files mask="TensorDeviceThreadPool.h"/>
        <files mask="TensorDimensionList.h"/>
        <files mask="TensorDimensions.h"/>
        <files mask="TensorEvalTo.h"/>
        <files mask="TensorEvaluator.h"/>
        <files mask="TensorExecutor.h"/>
        <files mask="TensorExpr.h"/>
        <files mask="TensorFFT.h"/>
        <files mask="TensorFixedSize.h"/>
        <files mask="TensorForcedEval.h"/>
        <files mask="TensorForwardDeclarations.h"/>
        <files mask="TensorFunctors.h"/>
        <files mask="TensorGenerator.h"/>
        <files mask="TensorGlobalFunctions.h"/>
        <files mask="TensorIO.h"/>
        <files mask="TensorImagePatch.h"/>
        <files mask="TensorIndexList.h"/>
        <files mask="TensorInflation.h"/>
        <files mask="TensorInitializer.h"/>
        <files mask="TensorIntDiv.h"/>
        <files mask="TensorLayoutSwap.h"/>
        <files mask="TensorMacros.h"/>
        <files mask="TensorMap.h"/>
        <files mask="TensorMeta.h"/>
        <files mask="TensorMorphing.h"/>
        <files mask="TensorPadding.h"/>
        <files mask="TensorPatch.h"/>
        <files mask="TensorRandom.h"/>
        <files mask="TensorReduction.h"/>
        <files mask="TensorReductionCuda.h"/>
        <files mask="TensorReductionSycl.h"/>
        <files mask="TensorRef.h"/>
        <files mask="TensorReverse.h"/>
        <files mask="TensorScan.h"/>
        <files mask="TensorShuffling.h"/>
        <files mask="TensorStorage.h"/>
        <files mask="TensorStriding.h"/>
        <files mask="TensorSycl.h"/>
        <files mask="TensorSyclConvertToDeviceExpression.h"/>
        <files mask="TensorSyclExprConstructor.h"/>
        <files mask="TensorSyclExtractAccessor.h"/>
        <files mask="TensorSyclExtractFunctors.h"/>
        <files mask="TensorSyclFunctors.h"/>
        <files mask="TensorSyclLeafCount.h"/>
        <files mask="TensorSyclPlaceHolderExpr.h"/>
        <files mask="TensorSyclRun.h"/>
        <files mask="TensorSyclTuple.h"/>
        <files mask="TensorTrace.h"/>
        <files mask="TensorTraits.h"/>
        <files mask="TensorUInt128.h"/>
        <files mask="TensorVolumePatch.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry" type="c_include">
        <files mask="DynamicSymmetry.h"/>
        <files mask="StaticSymmetry.h"/>
        <files mask="Symmetry.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/TensorSymmetry/util" type="c_include">
        <files mask="TemplateGroupTheory.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/ThreadPool" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/ThreadPool" type="c_include">
        <files mask="EventCount.h"/>
        <files mask="NonBlockingThreadPool.h"/>
        <files mask="RunQueue.h"/>
        <files mask="SimpleThreadPool.h"/>
        <files mask="ThreadCancel.h"/>
        <files mask="ThreadEnvironment.h"/>
        <files mask="ThreadLocal.h"/>
        <files mask="ThreadPoolInterface.h"/>
        <files mask="ThreadYield.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/util" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/CXX11/src/util" type="c_include">
        <files mask="CXX11Meta.h"/>
        <files mask="CXX11Workarounds.h"/>
        <files mask="EmulateArray.h"/>
        <files mask="EmulateCXX11Meta.h"/>
        <files mask="MaxSizeVector.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/AutoDiff" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/AutoDiff" type="c_include">
        <files mask="AutoDiffJacobian.h"/>
        <files mask="AutoDiffScalar.h"/>
        <files mask="AutoDiffVector.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/BVH" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/BVH" type="c_include">
        <files mask="BVAlgorithms.h"/>
        <files mask="KdBVH.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/EulerAngles" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/EulerAngles" type="c_include">
        <files mask="EulerAngles.h"/>
        <files mask="EulerSystem.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/FFT" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/FFT" type="c_include">
        <files mask="ei_fftw_impl.h"/>
        <files mask="ei_kissfft_impl.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/IterativeSolvers" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/IterativeSolvers" type="c_include">
        <files mask="DGMRES.h"/>
        <files mask="GMRES.h"/>
        <files mask="IncompleteLU.h"/>
        <files mask="MINRES.h"/>
        <files mask="Scaling.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/KroneckerProduct" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/KroneckerProduct" type="c_include">
        <files mask="KroneckerTensorProduct.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/LevenbergMarquardt" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/LevenbergMarquardt" type="c_include">
        <files mask="LMcovar.h"/>
        <files mask="LMonestep.h"/>
        <files mask="LMpar.h"/>
        <files mask="LMqrsolv.h"/>
        <files mask="LevenbergMarquardt.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/MatrixFunctions" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/MatrixFunctions" type="c_include">
        <files mask="MatrixExponential.h"/>
        <files mask="MatrixFunction.h"/>
        <files mask="MatrixLogarithm.h"/>
        <files mask="MatrixPower.h"/>
        <files mask="MatrixSquareRoot.h"/>
        <files mask="StemFunction.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/MoreVectorization" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/MoreVectorization" type="c_include">
        <files mask="MathFunctions.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/NonLinearOptimization" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/NonLinearOptimization" type="c_include">
        <files mask="HybridNonLinearSolver.h"/>
        <files mask="LevenbergMarquardt.h"/>
        <files mask="chkder.h"/>
        <files mask="covar.h"/>
        <files mask="dogleg.h"/>
        <files mask="fdjac1.h"/>
        <files mask="lmpar.h"/>
        <files mask="qrsolv.h"/>
        <files mask="r1mpyq.h"/>
        <files mask="r1updt.h"/>
        <files mask="rwupdt.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/NumericalDiff" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/NumericalDiff" type="c_include">
        <files mask="NumericalDiff.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Polynomials" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Polynomials" type="c_include">
        <files mask="Companion.h"/>
        <files mask="PolynomialSolver.h"/>
        <files mask="PolynomialUtils.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Skyline" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Skyline" type="c_include">
        <files mask="SkylineInplaceLU.h"/>
        <files mask="SkylineMatrix.h"/>
        <files mask="SkylineMatrixBase.h"/>
        <files mask="SkylineProduct.h"/>
        <files mask="SkylineStorage.h"/>
        <files mask="SkylineUtil.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SparseExtra" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SparseExtra" type="c_include">
        <files mask="BlockOfDynamicSparseMatrix.h"/>
        <files mask="BlockSparseMatrix.h"/>
        <files mask="DynamicSparseMatrix.h"/>
        <files mask="MarketIO.h"/>
        <files mask="MatrixMarketIterator.h"/>
        <files mask="RandomSetter.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SpecialFunctions" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SpecialFunctions" type="c_include">
        <files mask="SpecialFunctionsArrayAPI.h"/>
        <files mask="SpecialFunctionsFunctors.h"/>
        <files mask="SpecialFunctionsHalf.h"/>
        <files mask="SpecialFunctionsImpl.h"/>
        <files mask="SpecialFunctionsPacketMath.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SpecialFunctions/arch/CUDA" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/SpecialFunctions/arch/CUDA" type="c_include">
        <files mask="CudaSpecialFunctions.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Splines" target_path="tensorflow-lite/third_party/eigen/unsupported/Eigen/src/Splines" type="c_include">
        <files mask="Spline.h"/>
        <files mask="SplineFitting.h"/>
        <files mask="SplineFwd.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3/Eigen" target_path="tensorflow-lite/third_party/eigen3/Eigen" type="c_include">
        <files mask="Cholesky"/>
        <files mask="Core"/>
        <files mask="Eigenvalues"/>
        <files mask="LU"/>
        <files mask="QR"/>
        <files mask="SVD"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3" target_path="tensorflow-lite/third_party/eigen3" type="c_include">
        <files mask="LICENSE"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11" target_path="tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11" type="c_include">
        <files mask="Core"/>
        <files mask="FixedPoint"/>
        <files mask="NeuralNetworks"/>
        <files mask="Tensor"/>
        <files mask="ThreadPool"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint" target_path="tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint" type="c_include">
        <files mask="FixedPointTypes.h"/>
        <files mask="MatMatProduct.h"/>
        <files mask="MatMatProductAVX2.h"/>
        <files mask="MatMatProductNEON.h"/>
        <files mask="MatVecProduct.h"/>
        <files mask="PacketMathAVX2.h"/>
        <files mask="PacketMathAVX512.h"/>
        <files mask="TypeCastingAVX2.h"/>
        <files mask="TypeCastingAVX512.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11/src/NeuralNetworks" target_path="tensorflow-lite/third_party/eigen3/unsupported/Eigen/CXX11/src/NeuralNetworks" type="c_include">
        <files mask="Activations.h"/>
        <files mask="Attention.h"/>
        <files mask="BackwardCuboidConvolutions.h"/>
        <files mask="BackwardSpatialConvolutions.h"/>
        <files mask="CuboidConvolution.h"/>
        <files mask="Patch3d.h"/>
        <files mask="Pooling.h"/>
        <files mask="SoftMax.h"/>
        <files mask="SpatialConvolutions.h"/>
        <files mask="TensorConvolutionByFFT.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/eigen3/unsupported/Eigen" target_path="tensorflow-lite/third_party/eigen3/unsupported/Eigen" type="c_include">
        <files mask="MatrixFunctions"/>
        <files mask="SpecialFunctions"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite.third_party.farmhash.MIMXRT1052" name="Farmhash" brief="Farmhash library" version="1.1" full_name="Farmhash library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite/third_party/farmhash" target_path="tensorflow-lite/third_party/farmhash" type="doc">
        <files mask="COPYING"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/farmhash" target_path="tensorflow-lite/third_party/farmhash" type="src">
        <files mask="farmhash.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/farmhash" target_path="tensorflow-lite/third_party/farmhash" type="c_include">
        <files mask="farmhash.h"/>
      </source>
      <include_paths>
        <include_path path="tensorflow-lite/third_party/farmhash"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite.third_party.fft2d.MIMXRT1052" name="FFT2D" brief="General Purpose FFT (Fast Fourier/Cosine/Sine Transform) Package" version="1.0.0" full_name="FFT2D library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite/third_party/fft2d" target_path="tensorflow-lite/third_party/fft2d" type="c_include">
        <files mask="fft.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/fft2d" target_path="tensorflow-lite/third_party/fft2d" type="src">
        <files mask="fftsg.c"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/fft2d" target_path="tensorflow-lite/third_party/fft2d" type="doc">
        <files mask="readme.txt"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite.third_party.flatbuffers.MIMXRT1052" name="Flatbuffers" brief="Flatbuffers library" version="1.8.0" full_name="Flatbuffers library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite/third_party/flatbuffers" target_path="tensorflow-lite/third_party/flatbuffers" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="readme.md"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/flatbuffers/include/flatbuffers" target_path="tensorflow-lite/third_party/flatbuffers/include/flatbuffers" type="c_include">
        <files mask="base.h"/>
        <files mask="code_generators.h"/>
        <files mask="flatbuffers.h"/>
        <files mask="flexbuffers.h"/>
        <files mask="hash.h"/>
        <files mask="idl.h"/>
        <files mask="minireflect.h"/>
        <files mask="reflection.h"/>
        <files mask="reflection_generated.h"/>
        <files mask="registry.h"/>
        <files mask="stl_emulation.h"/>
        <files mask="util.h"/>
      </source>
      <include_paths>
        <include_path path="tensorflow-lite/third_party/flatbuffers"/>
        <include_path path="tensorflow-lite/third_party/flatbuffers/include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite.third_party.gemmlowp.MIMXRT1052" name="Gemmlowp" brief="Gemmlowp library" version="1.0.0" full_name="Gemmlowp library" devices="MIMXRT1052xxxxB" category="Machine Learning/eIQ" user_visible="false" type="middleware">
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp" target_path="tensorflow-lite/third_party/gemmlowp" type="doc">
        <files mask="AUTHORS"/>
        <files mask="CONTRIBUTORS"/>
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/eight_bit_int_gemm" target_path="tensorflow-lite/third_party/gemmlowp/eight_bit_int_gemm" type="src">
        <files mask="eight_bit_int_gemm.cc"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/eight_bit_int_gemm" target_path="tensorflow-lite/third_party/gemmlowp/eight_bit_int_gemm" type="c_include">
        <files mask="eight_bit_int_gemm.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/fixedpoint" target_path="tensorflow-lite/third_party/gemmlowp/fixedpoint" type="c_include">
        <files mask="fixedpoint.h"/>
        <files mask="fixedpoint_msa.h"/>
        <files mask="fixedpoint_neon.h"/>
        <files mask="fixedpoint_sse.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/internal" target_path="tensorflow-lite/third_party/gemmlowp/internal" type="c_include">
        <files mask="allocator.h"/>
        <files mask="block_params.h"/>
        <files mask="common.h"/>
        <files mask="compute.h"/>
        <files mask="dispatch_gemm_shape.h"/>
        <files mask="kernel.h"/>
        <files mask="kernel_default.h"/>
        <files mask="kernel_dsp.h"/>
        <files mask="kernel_msa.h"/>
        <files mask="kernel_neon.h"/>
        <files mask="kernel_reference.h"/>
        <files mask="kernel_sse.h"/>
        <files mask="multi_thread_gemm.h"/>
        <files mask="output.h"/>
        <files mask="output_msa.h"/>
        <files mask="output_neon.h"/>
        <files mask="output_sse.h"/>
        <files mask="pack.h"/>
        <files mask="pack_msa.h"/>
        <files mask="pack_neon.h"/>
        <files mask="pack_sse.h"/>
        <files mask="platform.h"/>
        <files mask="simd_wrappers.h"/>
        <files mask="simd_wrappers_common_neon_sse.h"/>
        <files mask="simd_wrappers_msa.h"/>
        <files mask="simd_wrappers_neon.h"/>
        <files mask="simd_wrappers_sse.h"/>
        <files mask="single_thread_gemm.h"/>
        <files mask="unpack.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/meta" target_path="tensorflow-lite/third_party/gemmlowp/meta" type="c_include">
        <files mask="base.h"/>
        <files mask="legacy_multi_thread_common.h"/>
        <files mask="legacy_multi_thread_gemm.h"/>
        <files mask="legacy_multi_thread_gemv.h"/>
        <files mask="legacy_operations_common.h"/>
        <files mask="legacy_single_thread_gemm.h"/>
        <files mask="multi_thread_common.h"/>
        <files mask="multi_thread_gemm.h"/>
        <files mask="multi_thread_transform.h"/>
        <files mask="quantized_mul_kernels.h"/>
        <files mask="quantized_mul_kernels_arm_32.h"/>
        <files mask="quantized_mul_kernels_arm_64.h"/>
        <files mask="single_thread_gemm.h"/>
        <files mask="single_thread_transform.h"/>
        <files mask="streams.h"/>
        <files mask="streams_arm_32.h"/>
        <files mask="streams_arm_64.h"/>
        <files mask="transform_kernels.h"/>
        <files mask="transform_kernels_arm_32.h"/>
        <files mask="transform_kernels_arm_64.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/profiling" target_path="tensorflow-lite/third_party/gemmlowp/profiling" type="c_include">
        <files mask="instrumentation.h"/>
        <files mask="profiler.h"/>
        <files mask="pthread_everywhere.h"/>
      </source>
      <source path="middleware/eiq/tensorflow-lite/third_party/gemmlowp/public" target_path="tensorflow-lite/third_party/gemmlowp/public" type="c_include">
        <files mask="bit_depth.h"/>
        <files mask="gemmlowp.h"/>
        <files mask="map.h"/>
        <files mask="output_stages.h"/>
      </source>
      <include_paths>
        <include_path path="tensorflow-lite/third_party/gemmlowp"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm0p_headers.MIMXRT1052" name="CMSIS_cm0p_headers" brief="CMSIS cm0p headers" version="2.5.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware"/>
    <component id="middleware.mcu-boot.CMSIS_cm4_headers.MIMXRT1052" name="CMSIS_cm4_headers" brief="CMSIS cm4 headers" version="2.5.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware"/>
    <component id="middleware.mcu-boot.CMSIS_cm4_mpu_headers.MIMXRT1052" name="CMSIS_cm4_mpu_headers" brief="CMSIS cm4 mpu headers" version="2.5.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware"/>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MIMXRT1052" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.5.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware"/>
    <component id="middleware.mcu-boot.MIMXRT1052_drivers.MIMXRT1052" name="MIMXRT1052_drivers" brief="MIMXRT1052 drivers" version="2.5.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMXRT1052/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1052_sources.MIMXRT1052" name="MCUBOOT_MIMXRT1052_sources" brief="MCUBOOT MIMXRT1052 sources" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/targets/MIMXRT1052/src" target_path="MIMXRT1052" type="src">
        <files mask="bl_lpuart_irq_config_MIMXRT1052.c"/>
        <files mask="clock_config_MIMXRT1052.c"/>
        <files mask="external_memory_property_map_MIMXRT1052.c"/>
        <files mask="flexspi_nand_config_MIMXRT1052.c"/>
        <files mask="flexspi_nor_config_MIMXRT1052.c"/>
        <files mask="hardware_init_MIMXRT1052.c"/>
        <files mask="memory_map_MIMXRT1052.c"/>
        <files mask="peripherals_MIMXRT1052.c"/>
        <files mask="sdmmc_config_MIMXRT1052.c"/>
        <files mask="semc_nand_config_MIMXRT1052.c"/>
        <files mask="semc_nor_config_MIMXRT1052.c"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1052/src" target_path="MIMXRT1052" type="c_include">
        <files mask="bootloader_config.h"/>
        <files mask="fusemap.h"/>
        <files mask="peripherals_pinmux.h"/>
        <files mask="sdmmc_init.h"/>
        <files mask="target_config.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1052/src" target_path="source/memory/src" type="src">
        <files mask="sram_init_MIMXRT1052.c"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1052/src" target_path="source/usb/bm_composite" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/common/src" target_path="MIMXRT1052" type="src">
        <files mask="pinmux_utility_imxrt_series.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1052_startup.MIMXRT1052" name="MCUBOOT_MIMXRT1052_startup" brief="MCUBOOT MIMXRT1052 startup sources" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="devices/MIMXRT1052" target_path="device" type="c_include">
        <files mask="MIMXRT1052.h"/>
        <files mask="MIMXRT1052_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMXRT1052.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1052/src/startup" target_path="device" type="src">
        <files mask="system_MIMXRT1052.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.all_files.MIMXRT1052" name="all_files" brief="mcu-boot files" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/blhost/linux/amd64" target_path="middleware/mcu-boot" type="other">
        <files mask="blhost"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/blhost/linux/i386" target_path="middleware/mcu-boot" type="other">
        <files mask="blhost"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="blhost User's Guide.pdf"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="middleware/mcu-boot" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities" target_path="middleware/mcu-boot" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="kinetis_family.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities/src" target_path="middleware/mcu-boot" type="src">
        <files mask="bootloader_tree_stub.c"/>
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="ring_buffer.c"/>
      </source>
      <source path="middleware/mcu-boot/tools/mk" target_path="middleware/mcu-boot" type="script">
        <files mask="common.mk"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk" target_path="middleware/mcu-boot" type="c_include">
        <files mask="AESCounter.h"/>
        <files mask="AESKey.h"/>
        <files mask="BlfwkErrors.h"/>
        <files mask="Blob.h"/>
        <files mask="Bootloader.h"/>
        <files mask="BusPal.h"/>
        <files mask="BusPalPeripheral.h"/>
        <files mask="Command.h"/>
        <files mask="Crc.h"/>
        <files mask="DataSource.h"/>
        <files mask="DataSourceImager.h"/>
        <files mask="DataTarget.h"/>
        <files mask="ELF.h"/>
        <files mask="ELFSourceFile.h"/>
        <files mask="EndianUtilities.h"/>
        <files mask="ExcludesListMatcher.h"/>
        <files mask="GHSSecInfo.h"/>
        <files mask="GlobMatcher.h"/>
        <files mask="HexValues.h"/>
        <files mask="IntelHexSourceFile.h"/>
        <files mask="Logging.h"/>
        <files mask="OptionContext.h"/>
        <files mask="Packetizer.h"/>
        <files mask="Peripheral.h"/>
        <files mask="Progress.h"/>
        <files mask="Random.h"/>
        <files mask="RijndaelCTR.h"/>
        <files mask="SBSourceFile.h"/>
        <files mask="SDPCommand.h"/>
        <files mask="SDPUartPacketizer.h"/>
        <files mask="SDPUsbHidPacketizer.h"/>
        <files mask="SRecordSourceFile.h"/>
        <files mask="SearchPath.h"/>
        <files mask="SerialPacketizer.h"/>
        <files mask="SimPacketizer.h"/>
        <files mask="SimPeripheral.h"/>
        <files mask="Simulator.h"/>
        <files mask="SimulatorMemory.h"/>
        <files mask="SourceFile.h"/>
        <files mask="StELFFile.h"/>
        <files mask="StExecutableImage.h"/>
        <files mask="StIntelHexFile.h"/>
        <files mask="StSRecordFile.h"/>
        <files mask="StringMatcher.h"/>
        <files mask="UartPeripheral.h"/>
        <files mask="Updater.h"/>
        <files mask="UsbHidPacketizer.h"/>
        <files mask="UsbHidPeripheral.h"/>
        <files mask="Value.h"/>
        <files mask="bootloader_config.h"/>
        <files mask="format_string.h"/>
        <files mask="hidapi.h"/>
        <files mask="host_types.h"/>
        <files mask="int_size.h"/>
        <files mask="json.h"/>
        <files mask="options.h"/>
        <files mask="rijndael.h"/>
        <files mask="serial.h"/>
        <files mask="smart_ptr.h"/>
        <files mask="stdafx.h"/>
        <files mask="utils.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk/doc" target_path="middleware/mcu-boot" type="other">
        <files mask="blfwk.md"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk/src" target_path="middleware/mcu-boot" type="src">
        <files mask="AESCounter.cpp"/>
        <files mask="AESKey.cpp"/>
        <files mask="Blob.cpp"/>
        <files mask="Bootloader.cpp"/>
        <files mask="BusPal.cpp"/>
        <files mask="BusPalPeripheral.cpp"/>
        <files mask="Command.cpp"/>
        <files mask="Crc.cpp"/>
        <files mask="DataSource.cpp"/>
        <files mask="DataSourceImager.cpp"/>
        <files mask="DataTarget.cpp"/>
        <files mask="ELFSourceFile.cpp"/>
        <files mask="ExcludesListMatcher.cpp"/>
        <files mask="GHSSecInfo.cpp"/>
        <files mask="GlobMatcher.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="IntelHexSourceFile.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="Random.cpp"/>
        <files mask="RijndaelCTR.cpp"/>
        <files mask="SBSourceFile.cpp"/>
        <files mask="SDPCommand.cpp"/>
        <files mask="SDPUsbHidPacketizer.cpp"/>
        <files mask="SRecordSourceFile.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="SerialPacketizer.cpp"/>
        <files mask="SimPacketizer.cpp"/>
        <files mask="SimPeripheral.cpp"/>
        <files mask="Simulator.cpp"/>
        <files mask="SimulatorMemory.cpp"/>
        <files mask="SourceFile.cpp"/>
        <files mask="StELFFile.cpp"/>
        <files mask="StExecutableImage.cpp"/>
        <files mask="StIntelHexFile.cpp"/>
        <files mask="StSRecordFile.cpp"/>
        <files mask="UartPeripheral.cpp"/>
        <files mask="Updater.cpp"/>
        <files mask="UsbHidPacketizer.cpp"/>
        <files mask="UsbHidPeripheral.cpp"/>
        <files mask="Value.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="hid-linux.c"/>
        <files mask="hid-mac.c"/>
        <files mask="hid-windows.c"/>
        <files mask="jsoncpp.cpp"/>
        <files mask="options.cpp"/>
        <files mask="rijndael.cpp"/>
        <files mask="serial.c"/>
        <files mask="utils.cpp"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/bootloader" target_path="middleware/mcu-boot" type="c_include">
        <files mask="bl_peripheral.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/crc" target_path="middleware/mcu-boot" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/crc/src" target_path="middleware/mcu-boot" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/include" target_path="middleware/mcu-boot" type="c_include">
        <files mask="bootloader_common.h"/>
        <files mask="bootloader_hid_report_ids.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/memory" target_path="middleware/mcu-boot" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/packet" target_path="middleware/mcu-boot" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/property" target_path="middleware/mcu-boot" type="c_include">
        <files mask="property.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/blhost/gcc" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/blhost/src" target_path="middleware/mcu-boot" type="src">
        <files mask="blhost.cpp"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/blhost/src" target_path="middleware/mcu-boot" type="c_include">
        <files mask="targetver.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwkdll" target_path="middleware/mcu-boot" type="src">
        <files mask="blfwkdll.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwkdll" target_path="middleware/mcu-boot" type="c_include">
        <files mask="blfwkdll.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources.MIMXRT1052" name="MCUBOOT_common_sources" brief="Bootloader common sources" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/autobaud" target_path="source/autobaud" type="c_include">
        <files mask="autobaud.h"/>
      </source>
      <source path="middleware/mcu-boot/src/autobaud/src" target_path="source/autobaud" type="src">
        <files mask="autobaud_irq.c"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_app_crc_check.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_irq_common.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_app_crc_check.c"/>
        <files mask="bl_command.c"/>
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_main.c"/>
        <files mask="bl_misc.c"/>
        <files mask="bl_shutdown_cleanup.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_user_entry.c"/>
      </source>
      <source path="middleware/mcu-boot/src/crc" target_path="source/crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source path="middleware/mcu-boot/src/crc/src" target_path="source/crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source path="middleware/mcu-boot/src/include" target_path="source/include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory" target_path="source/memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="device_memory.c"/>
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="device_memory.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
        <files mask="sram_init.h"/>
      </source>
      <source path="middleware/mcu-boot/src/packet" target_path="source/packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source path="middleware/mcu-boot/src/packet/src" target_path="source/packet/src" type="src">
        <files mask="serial_packet.c"/>
      </source>
      <source path="middleware/mcu-boot/src/property" target_path="source/property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source path="middleware/mcu-boot/src/sbloader" target_path="source/sbloader" type="c_include">
        <files mask="sb_file_format.h"/>
        <files mask="sbloader.h"/>
      </source>
      <source path="middleware/mcu-boot/src/sbloader/src" target_path="source/sbloader/src" type="src">
        <files mask="sbloader.c"/>
      </source>
      <source path="middleware/mcu-boot/src/startup" target_path="startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities" target_path="source/utilities" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities/src" target_path="source/utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources_imxrt.MIMXRT1052" name="MCUBOOT_imxrt_sources" brief="Bootloader sources for i.MXRT devices" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_keyblob.h"/>
        <files mask="bl_nor_encrypt.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_keyblob.c"/>
        <files mask="bl_keyblob_dcp.c"/>
        <files mask="bl_nor_encrypt_bee.c"/>
        <files mask="lpuart_peripheral_interface.c"/>
        <files mask="usb_hid_msc_peripheral_interface.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/port" target_path="source/drivers/port" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="source/drivers" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
        <files mask="mmc_memory.c"/>
        <files mask="sd_memory.c"/>
        <files mask="semc_nand_memory.c"/>
        <files mask="semc_nor_memory.c"/>
        <files mask="spi_nor_eeprom_memory.c"/>
        <files mask="spinand_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
        <files mask="mmc_memory.h"/>
        <files mask="sd_memory.h"/>
        <files mask="semc_nand_memory.h"/>
        <files mask="semc_nor_memory.h"/>
        <files mask="spi_nor_eeprom_memory.h"/>
        <files mask="spinand_memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/property/src" target_path="source/property/src" type="src">
        <files mask="property_imx.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources_imxrt1015.MIMXRT1052" name="MCUBOOT_imxrt_sources" brief="Bootloader sources for i.MXRT1015 devices" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_keyblob.h"/>
        <files mask="bl_nor_encrypt.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_keyblob.c"/>
        <files mask="bl_keyblob_dcp.c"/>
        <files mask="bl_nor_encrypt_bee.c"/>
        <files mask="lpuart_peripheral_interface.c"/>
        <files mask="usb_hid_msc_peripheral_interface.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/port" target_path="source/drivers/port" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="source/drivers" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
        <files mask="spi_nor_eeprom_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
        <files mask="spi_nor_eeprom_memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/property/src" target_path="source/property/src" type="src">
        <files mask="property_imx.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nand.MIMXRT1052" name="MCUBOOT_flexspi_nand" brief="MCUBOOT flexspi nand driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nand" target_path="source/drivers/flexspi_nand" type="src">
        <files mask="flexspi_nand_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nand" target_path="source/drivers/flexspi_nand" type="c_include">
        <files mask="flexspi_nand_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nor.MIMXRT1052" name="MCUBOOT_flexspi_nor" brief="MCUBOOT flexspi nor driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nor" target_path="source/drivers/flexspi_nor" type="src">
        <files mask="flexspi_nor_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nor" target_path="source/drivers/flexspi_nor" type="c_include">
        <files mask="flexspi_nor_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MIMXRT1052" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/microseconds" target_path="source/drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/microseconds/src" target_path="source/drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MIMXRT1052" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/microseconds" target_path="source/drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/microseconds/src" target_path="source/drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_ocotp.MIMXRT1052" name="MCUBOOT_ocotp" brief="MCUBOOT ocotp driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/ocotp" target_path="source/drivers/ocotp" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/ocotp" target_path="source/drivers/ocotp" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_sdmmc.MIMXRT1052" name="MCUBOOT_sdmmc" brief="MCUBOOT sdmmc driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/gpio" target_path="source/drivers/gpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/inc" target_path="source/drivers/sdmmc" type="c_include">
        <files mask="fsl_card.h"/>
        <files mask="fsl_host.h"/>
        <files mask="fsl_sdmmc.h"/>
        <files mask="fsl_specification.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/port/usdhc/polling" target_path="source/drivers/sdmmc" type="src">
        <files mask="fsl_host.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/src" target_path="source/drivers/sdmmc" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/usdhc" target_path="source/drivers/usdhc" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/usdhc" target_path="source/drivers/usdhc" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_semc_nand.MIMXRT1052" name="MCUBOOT_semc_nand" brief="MCUBOOT semc nand driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/nand_ecc" target_path="source/drivers/nand_ecc" type="src">
        <files mask="nand_ecc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/nand_ecc" target_path="source/drivers/nand_ecc" type="c_include">
        <files mask="nand_ecc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nand" target_path="source/drivers/semc_nand" type="src">
        <files mask="semc_nand_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nand" target_path="source/drivers/semc_nand" type="c_include">
        <files mask="semc_nand_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_semc_nor.MIMXRT1052" name="MCUBOOT_semc_nor" brief="MCUBOOT semc nor driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nor" target_path="source/drivers/semc_nor" type="src">
        <files mask="semc_nor_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nor" target_path="source/drivers/semc_nor" type="c_include">
        <files mask="semc_nor_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_serial_nor_eeprom.MIMXRT1052" name="MCUBOOT_serial_nor_eeprom" brief="MCUBOOT serial nor eeprom driver" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/lpspi" target_path="source/drivers/lpspi" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpspi" target_path="source/drivers/lpspi" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/serial_nor_eeprom" target_path="source/drivers/serial_nor_eeprom" type="src">
        <files mask="serial_nor_eeprom.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/serial_nor_eeprom" target_path="source/drivers/serial_nor_eeprom" type="c_include">
        <files mask="serial_nor_eeprom.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.elftosb.MIMXRT1052" name="elftosb" brief="mcu-boot elftosb source and executables" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/elftosb/linux/amd64" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/elftosb/linux/i386" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="elftosb User's Guide.pdf"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/common" target_path="middleware/mcu-boot" type="c_include">
        <files mask="AESCounter.h"/>
        <files mask="AESKey.h"/>
        <files mask="Blob.h"/>
        <files mask="BootImage.h"/>
        <files mask="DataSource.h"/>
        <files mask="DataSourceImager.h"/>
        <files mask="DataTarget.h"/>
        <files mask="ELF.h"/>
        <files mask="ELFSourceFile.h"/>
        <files mask="EncoreBootImage.h"/>
        <files mask="EncoreBootImageReader.h"/>
        <files mask="EndianUtilities.h"/>
        <files mask="EvalContext.h"/>
        <files mask="ExcludesListMatcher.h"/>
        <files mask="GHSSecInfo.h"/>
        <files mask="GlobMatcher.h"/>
        <files mask="HexValues.h"/>
        <files mask="IVTDataSource.h"/>
        <files mask="Keyblob.h"/>
        <files mask="KeyblobEntry.h"/>
        <files mask="Logging.h"/>
        <files mask="Operation.h"/>
        <files mask="OptionContext.h"/>
        <files mask="OptionDictionary.h"/>
        <files mask="OutputSection.h"/>
        <files mask="Random.h"/>
        <files mask="RijndaelCBCMAC.h"/>
        <files mask="RijndaelCTR.h"/>
        <files mask="SB2Image.h"/>
        <files mask="SHA1.h"/>
        <files mask="SRecordSourceFile.h"/>
        <files mask="SearchPath.h"/>
        <files mask="SourceFile.h"/>
        <files mask="StELFFile.h"/>
        <files mask="StExecutableImage.h"/>
        <files mask="StSRecordFile.h"/>
        <files mask="StringMatcher.h"/>
        <files mask="Value.h"/>
        <files mask="Version.h"/>
        <files mask="aes128_key_wrap_unwrap.h"/>
        <files mask="crc.h"/>
        <files mask="format_string.h"/>
        <files mask="iMXImage.h"/>
        <files mask="int_size.h"/>
        <files mask="options.h"/>
        <files mask="rijndael.h"/>
        <files mask="smart_ptr.h"/>
        <files mask="stdafx.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/common" target_path="middleware/mcu-boot" type="src">
        <files mask="AESKey.cpp"/>
        <files mask="Blob.cpp"/>
        <files mask="DataSource.cpp"/>
        <files mask="DataSourceImager.cpp"/>
        <files mask="DataTarget.cpp"/>
        <files mask="ELFSourceFile.cpp"/>
        <files mask="EncoreBootImage.cpp"/>
        <files mask="EncoreBootImageReader.cpp"/>
        <files mask="EvalContext.cpp"/>
        <files mask="ExcludesListMatcher.cpp"/>
        <files mask="GHSSecInfo.cpp"/>
        <files mask="GlobMatcher.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="IVTDataSource.cpp"/>
        <files mask="Keyblob.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="Operation.cpp"/>
        <files mask="OptionDictionary.cpp"/>
        <files mask="OutputSection.cpp"/>
        <files mask="Random.cpp"/>
        <files mask="RijndaelCBCMAC.cpp"/>
        <files mask="RijndaelCTR.cpp"/>
        <files mask="SB2Image.cpp"/>
        <files mask="SHA1.cpp"/>
        <files mask="SRecordSourceFile.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="SourceFile.cpp"/>
        <files mask="StELFFile.cpp"/>
        <files mask="StExecutableImage.cpp"/>
        <files mask="StSRecordFile.cpp"/>
        <files mask="Value.cpp"/>
        <files mask="Version.cpp"/>
        <files mask="aes128_key_wrap_unwrap.c"/>
        <files mask="bytes_aes.c"/>
        <files mask="crc.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="iMXImage.cpp"/>
        <files mask="options.cpp"/>
        <files mask="rijndael.cpp"/>
        <files mask="stdafx.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="src">
        <files mask="BootImageGenerator.cpp"/>
        <files mask="ConversionController.cpp"/>
        <files mask="ElftosbAST.cpp"/>
        <files mask="ElftosbLexer.cpp"/>
        <files mask="EncoreBootImageGenerator.cpp"/>
        <files mask="SB2ImageGenerator.cpp"/>
        <files mask="elftosb.cpp"/>
        <files mask="elftosb_lexer.cpp"/>
        <files mask="elftosb_parser.tab.cpp"/>
        <files mask="iMXImageGenerator.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="c_include">
        <files mask="BootImageGenerator.h"/>
        <files mask="ConversionController.h"/>
        <files mask="ElftosbAST.h"/>
        <files mask="ElftosbErrors.h"/>
        <files mask="ElftosbLexer.h"/>
        <files mask="EncoreBootImageGenerator.h"/>
        <files mask="FlexLexer.h"/>
        <files mask="SB2ImageGenerator.h"/>
        <files mask="iMXImageGenerator.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb_lexer.l"/>
        <files mask="elftosb_parser.tab.hpp"/>
        <files mask="elftosb_parser.y"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/encryptgpk" target_path="middleware/mcu-boot" type="src">
        <files mask="encryptgpk.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/keygen" target_path="middleware/mcu-boot" type="src">
        <files mask="keygen.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb" target_path="middleware/mcu-boot" type="other">
        <files mask="makefile"/>
        <files mask="makefile.rules"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="apache-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/configs" target_path="middleware/mcu-boot" type="doc">
        <files mask="README.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/configs" target_path="middleware/mcu-boot" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h"/>
        <files mask="config-mini-tls1_1.h"/>
        <files mask="config-picocoin.h"/>
        <files mask="config-suite-b.h"/>
        <files mask="config-thread.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/include" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/include/mbedtls" target_path="middleware/mcu-boot" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="md_internal.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="pkcs5.h"/>
        <files mask="platform.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/library" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/library" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/library" target_path="middleware/mcu-boot" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="md_wrap.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/aes" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/aes" target_path="middleware/mcu-boot" type="src">
        <files mask="aescrypt2.c"/>
        <files mask="crypt_and_hash.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/hash" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/hash" target_path="middleware/mcu-boot" type="src">
        <files mask="generic_sum.c"/>
        <files mask="hello.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/pkey" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="dh_prime.txt"/>
        <files mask="rsa_priv.txt"/>
        <files mask="rsa_pub.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/pkey" target_path="middleware/mcu-boot" type="src">
        <files mask="dh_client.c"/>
        <files mask="dh_genprime.c"/>
        <files mask="dh_server.c"/>
        <files mask="ecdh_curve25519.c"/>
        <files mask="ecdsa.c"/>
        <files mask="gen_key.c"/>
        <files mask="key_app.c"/>
        <files mask="key_app_writer.c"/>
        <files mask="mpi_demo.c"/>
        <files mask="pk_decrypt.c"/>
        <files mask="pk_encrypt.c"/>
        <files mask="pk_sign.c"/>
        <files mask="pk_verify.c"/>
        <files mask="rsa_decrypt.c"/>
        <files mask="rsa_encrypt.c"/>
        <files mask="rsa_genkey.c"/>
        <files mask="rsa_sign.c"/>
        <files mask="rsa_sign_pss.c"/>
        <files mask="rsa_verify.c"/>
        <files mask="rsa_verify_pss.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/random" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/random" target_path="middleware/mcu-boot" type="src">
        <files mask="gen_entropy.c"/>
        <files mask="gen_random_ctr_drbg.c"/>
        <files mask="gen_random_havege.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/ssl" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/ssl" target_path="middleware/mcu-boot" type="src">
        <files mask="dtls_client.c"/>
        <files mask="dtls_server.c"/>
        <files mask="mini_client.c"/>
        <files mask="ssl_client1.c"/>
        <files mask="ssl_client2.c"/>
        <files mask="ssl_fork_server.c"/>
        <files mask="ssl_mail_client.c"/>
        <files mask="ssl_pthread_server.c"/>
        <files mask="ssl_server.c"/>
        <files mask="ssl_server2.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/test" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/test" target_path="middleware/mcu-boot" type="src">
        <files mask="benchmark.c"/>
        <files mask="selftest.c"/>
        <files mask="ssl_cert_test.c"/>
        <files mask="udp_proxy.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/util" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/util" target_path="middleware/mcu-boot" type="src">
        <files mask="pem2der.c"/>
        <files mask="strerror.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs" target_path="middleware/mcu-boot" type="src">
        <files mask="wince_main.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/x509" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/x509" target_path="middleware/mcu-boot" type="src">
        <files mask="cert_app.c"/>
        <files mask="cert_req.c"/>
        <files mask="cert_write.c"/>
        <files mask="crl_app.c"/>
        <files mask="req_app.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts" target_path="middleware/mcu-boot" type="script">
        <files mask="apidoc_full.sh"/>
        <files mask="bump_version.sh"/>
        <files mask="ecc-heap.sh"/>
        <files mask="footprint.sh"/>
        <files mask="memory.sh"/>
        <files mask="tmp_ignore_makefiles.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts" target_path="middleware/mcu-boot" type="other">
        <files mask="config.pl"/>
        <files mask="find-mem-leak.cocci"/>
        <files mask="generate_errors.pl"/>
        <files mask="generate_features.pl"/>
        <files mask="generate_visualc_files.pl"/>
        <files mask="malloc-init.pl"/>
        <files mask="massif_max.pl"/>
        <files mask="rename.pl"/>
        <files mask="rm-malloc-cast.cocci"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts/data_files" target_path="middleware/mcu-boot" type="other">
        <files mask="error.fmt"/>
        <files mask="version_features.fmt"/>
        <files mask="vs2010-app-template.vcxproj"/>
        <files mask="vs2010-main-template.vcxproj"/>
        <files mask="vs2010-sln-template.sln"/>
        <files mask="vs6-app-template.dsp"/>
        <files mask="vs6-main-template.dsp"/>
        <files mask="vs6-workspace-template.dsw"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts/data_files" target_path="middleware/mcu-boot" type="doc">
        <files mask="rename-1.3-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="Descriptions.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests" target_path="middleware/mcu-boot" type="script">
        <files mask="compat.sh"/>
        <files mask="ssl-opt.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="doc">
        <files mask="Readme-x509.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="other">
        <files mask="bitstring-in-dn.pem"/>
        <files mask="cli2.key"/>
        <files mask="crl-ec-sha1.pem"/>
        <files mask="crl-ec-sha224.pem"/>
        <files mask="crl-ec-sha256.pem"/>
        <files mask="crl-ec-sha384.pem"/>
        <files mask="crl-ec-sha512.pem"/>
        <files mask="crl-future.pem"/>
        <files mask="crl-rsa-pss-sha1-badsign.pem"/>
        <files mask="crl-rsa-pss-sha1.pem"/>
        <files mask="crl-rsa-pss-sha224.pem"/>
        <files mask="crl-rsa-pss-sha256.pem"/>
        <files mask="crl-rsa-pss-sha384.pem"/>
        <files mask="crl-rsa-pss-sha512.pem"/>
        <files mask="crl.pem"/>
        <files mask="crl_cat_ec-rsa.pem"/>
        <files mask="crl_cat_ecfut-rsa.pem"/>
        <files mask="crl_cat_rsa-ec.pem"/>
        <files mask="crl_cat_rsabadpem-ec.pem"/>
        <files mask="crl_expired.pem"/>
        <files mask="crl_md2.pem"/>
        <files mask="crl_md4.pem"/>
        <files mask="crl_md5.pem"/>
        <files mask="crl_sha1.pem"/>
        <files mask="crl_sha224.pem"/>
        <files mask="crl_sha256.pem"/>
        <files mask="crl_sha384.pem"/>
        <files mask="crl_sha512.pem"/>
        <files mask="crt_cat_rsaexp-ec.pem"/>
        <files mask="dh.1000.pem"/>
        <files mask="dh.optlen.pem"/>
        <files mask="dhparams.pem"/>
        <files mask="ec_224_prv.pem"/>
        <files mask="ec_224_pub.pem"/>
        <files mask="ec_256_prv.pem"/>
        <files mask="ec_256_pub.pem"/>
        <files mask="ec_384_prv.pem"/>
        <files mask="ec_384_pub.pem"/>
        <files mask="ec_521_prv.pem"/>
        <files mask="ec_521_pub.pem"/>
        <files mask="ec_bp256_prv.pem"/>
        <files mask="ec_bp256_pub.pem"/>
        <files mask="ec_bp384_prv.pem"/>
        <files mask="ec_bp384_pub.pem"/>
        <files mask="ec_bp512_prv.pem"/>
        <files mask="ec_bp512_pub.pem"/>
        <files mask="ec_prv.noopt.der"/>
        <files mask="ec_prv.pk8.der"/>
        <files mask="ec_prv.pk8.pem"/>
        <files mask="ec_prv.pk8.pw.der"/>
        <files mask="ec_prv.pk8.pw.pem"/>
        <files mask="ec_prv.sec1.der"/>
        <files mask="ec_prv.sec1.pem"/>
        <files mask="ec_prv.sec1.pw.pem"/>
        <files mask="ec_prv.specdom.der"/>
        <files mask="ec_pub.der"/>
        <files mask="ec_pub.pem"/>
        <files mask="enco-ca-prstr.pem"/>
        <files mask="enco-cert-utf8str.pem"/>
        <files mask="format_gen.key"/>
        <files mask="format_gen.pub"/>
        <files mask="format_pkcs12.fmt"/>
        <files mask="format_rsa.key"/>
        <files mask="keyfile.3des"/>
        <files mask="keyfile.aes128"/>
        <files mask="keyfile.aes192"/>
        <files mask="keyfile.aes256"/>
        <files mask="keyfile.des"/>
        <files mask="passwd.psk"/>
        <files mask="pkcs8_pbe_sha1_2des.key"/>
        <files mask="pkcs8_pbe_sha1_3des.der"/>
        <files mask="pkcs8_pbe_sha1_3des.key"/>
        <files mask="pkcs8_pbe_sha1_rc4_128.key"/>
        <files mask="pkcs8_pbes2_pbkdf2_3des.der"/>
        <files mask="pkcs8_pbes2_pbkdf2_3des.key"/>
        <files mask="pkcs8_pbes2_pbkdf2_des.key"/>
        <files mask="rsa4096_prv.pem"/>
        <files mask="rsa4096_pub.pem"/>
        <files mask="server1.key"/>
        <files mask="server1.pubkey"/>
        <files mask="server1.req.cert_type"/>
        <files mask="server1.req.key_usage"/>
        <files mask="server1.req.ku-ct"/>
        <files mask="server1.req.md4"/>
        <files mask="server1.req.md5"/>
        <files mask="server1.req.sha1"/>
        <files mask="server1.req.sha224"/>
        <files mask="server1.req.sha256"/>
        <files mask="server1.req.sha384"/>
        <files mask="server1.req.sha512"/>
        <files mask="server10.key"/>
        <files mask="server2.key"/>
        <files mask="server3.key"/>
        <files mask="server4.key"/>
        <files mask="server5.key"/>
        <files mask="server5.req.ku.sha1"/>
        <files mask="server5.req.sha1"/>
        <files mask="server5.req.sha224"/>
        <files mask="server5.req.sha256"/>
        <files mask="server5.req.sha384"/>
        <files mask="server5.req.sha512"/>
        <files mask="server6.key"/>
        <files mask="server7.key"/>
        <files mask="server8.key"/>
        <files mask="server9.key"/>
        <files mask="server9.req.sha1"/>
        <files mask="server9.req.sha224"/>
        <files mask="server9.req.sha256"/>
        <files mask="server9.req.sha384"/>
        <files mask="server9.req.sha512"/>
        <files mask="test-ca.key"/>
        <files mask="test-ca2.key"/>
        <files mask="test-int-ca.key"/>
        <files mask="test-int-ca2.key"/>
        <files mask="test-int-ca3.key"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="binary">
        <files mask="cert_example_multi.crt"/>
        <files mask="cert_example_multi_nocn.crt"/>
        <files mask="cert_example_wildcard.crt"/>
        <files mask="cert_md2.crt"/>
        <files mask="cert_md4.crt"/>
        <files mask="cert_md5.crt"/>
        <files mask="cert_sha1.crt"/>
        <files mask="cert_sha224.crt"/>
        <files mask="cert_sha256.crt"/>
        <files mask="cert_sha384.crt"/>
        <files mask="cert_sha512.crt"/>
        <files mask="cert_v1_with_ext.crt"/>
        <files mask="cli2.crt"/>
        <files mask="keyUsage.decipherOnly.crt"/>
        <files mask="server1-nospace.crt"/>
        <files mask="server1-v1.crt"/>
        <files mask="server1.cert_type.crt"/>
        <files mask="server1.crt"/>
        <files mask="server1.ext_ku.crt"/>
        <files mask="server1.key_usage.crt"/>
        <files mask="server1.v1.crt"/>
        <files mask="server10_int3_int-ca2.crt"/>
        <files mask="server10_int3_int-ca2_ca.crt"/>
        <files mask="server1_ca.crt"/>
        <files mask="server2-badsign.crt"/>
        <files mask="server2-v1-chain.crt"/>
        <files mask="server2-v1.crt"/>
        <files mask="server2.crt"/>
        <files mask="server2.ku-ds.crt"/>
        <files mask="server2.ku-ds_ke.crt"/>
        <files mask="server2.ku-ka.crt"/>
        <files mask="server2.ku-ke.crt"/>
        <files mask="server3.crt"/>
        <files mask="server4.crt"/>
        <files mask="server5-badsign.crt"/>
        <files mask="server5-der0.crt"/>
        <files mask="server5-der1a.crt"/>
        <files mask="server5-der1b.crt"/>
        <files mask="server5-der2.crt"/>
        <files mask="server5-der4.crt"/>
        <files mask="server5-der8.crt"/>
        <files mask="server5-der9.crt"/>
        <files mask="server5-expired.crt"/>
        <files mask="server5-future.crt"/>
        <files mask="server5-selfsigned.crt"/>
        <files mask="server5-sha1.crt"/>
        <files mask="server5-sha224.crt"/>
        <files mask="server5-sha384.crt"/>
        <files mask="server5-sha512.crt"/>
        <files mask="server5.crt"/>
        <files mask="server5.eku-cli.crt"/>
        <files mask="server5.eku-cs.crt"/>
        <files mask="server5.eku-cs_any.crt"/>
        <files mask="server5.eku-srv.crt"/>
        <files mask="server5.eku-srv_cli.crt"/>
        <files mask="server5.ku-ds.crt"/>
        <files mask="server5.ku-ka.crt"/>
        <files mask="server5.ku-ke.crt"/>
        <files mask="server6-ss-child.crt"/>
        <files mask="server6.crt"/>
        <files mask="server7.crt"/>
        <files mask="server7_all_space.crt"/>
        <files mask="server7_int-ca.crt"/>
        <files mask="server7_int-ca_ca2.crt"/>
        <files mask="server7_pem_space.crt"/>
        <files mask="server7_trailing_space.crt"/>
        <files mask="server8.crt"/>
        <files mask="server8_int-ca2.crt"/>
        <files mask="server9-bad-mgfhash.crt"/>
        <files mask="server9-bad-saltlen.crt"/>
        <files mask="server9-badsign.crt"/>
        <files mask="server9-defaults.crt"/>
        <files mask="server9-sha224.crt"/>
        <files mask="server9-sha256.crt"/>
        <files mask="server9-sha384.crt"/>
        <files mask="server9-sha512.crt"/>
        <files mask="server9-with-ca.crt"/>
        <files mask="server9.crt"/>
        <files mask="test-ca-v1.crt"/>
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
        <files mask="test-ca2.ku-crl.crt"/>
        <files mask="test-ca2.ku-crt.crt"/>
        <files mask="test-ca2.ku-crt_crl.crt"/>
        <files mask="test-ca2.ku-ds.crt"/>
        <files mask="test-ca2_cat-future-present.crt"/>
        <files mask="test-ca2_cat-past-present.crt"/>
        <files mask="test-ca2_cat-present-future.crt"/>
        <files mask="test-ca2_cat-present-past.crt"/>
        <files mask="test-ca_cat12.crt"/>
        <files mask="test-ca_cat21.crt"/>
        <files mask="test-int-ca.crt"/>
        <files mask="test-int-ca2.crt"/>
        <files mask="test-int-ca3.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir1" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir2" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir3" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir4" target_path="middleware/mcu-boot" type="binary">
        <files mask="cert11.crt"/>
        <files mask="cert12.crt"/>
        <files mask="cert13.crt"/>
        <files mask="cert14.crt"/>
        <files mask="cert21.crt"/>
        <files mask="cert22.crt"/>
        <files mask="cert23.crt"/>
        <files mask="cert31.crt"/>
        <files mask="cert32.crt"/>
        <files mask="cert33.crt"/>
        <files mask="cert34.crt"/>
        <files mask="cert41.crt"/>
        <files mask="cert42.crt"/>
        <files mask="cert43.crt"/>
        <files mask="cert44.crt"/>
        <files mask="cert45.crt"/>
        <files mask="cert51.crt"/>
        <files mask="cert52.crt"/>
        <files mask="cert53.crt"/>
        <files mask="cert54.crt"/>
        <files mask="cert61.crt"/>
        <files mask="cert62.crt"/>
        <files mask="cert63.crt"/>
        <files mask="cert71.crt"/>
        <files mask="cert72.crt"/>
        <files mask="cert73.crt"/>
        <files mask="cert74.crt"/>
        <files mask="cert81.crt"/>
        <files mask="cert82.crt"/>
        <files mask="cert83.crt"/>
        <files mask="cert91.crt"/>
        <files mask="cert92.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/scripts" target_path="middleware/mcu-boot" type="script">
        <files mask="all.sh"/>
        <files mask="basic-build-test.sh"/>
        <files mask="check-generated-files.sh"/>
        <files mask="check-names.sh"/>
        <files mask="doxygen.sh"/>
        <files mask="generate-afl-tests.sh"/>
        <files mask="list-identifiers.sh"/>
        <files mask="list-macros.sh"/>
        <files mask="list-symbols.sh"/>
        <files mask="travis-log-failure.sh"/>
        <files mask="yotta-build.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/scripts" target_path="middleware/mcu-boot" type="other">
        <files mask="check-doxy-blocks.pl"/>
        <files mask="curves.pl"/>
        <files mask="gen_ctr_drbg.pl"/>
        <files mask="gen_gcm_decrypt.pl"/>
        <files mask="gen_gcm_encrypt.pl"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl"/>
        <files mask="generate_code.pl"/>
        <files mask="key-exchanges.pl"/>
        <files mask="list-enum-consts.pl"/>
        <files mask="recursion.pl"/>
        <files mask="run-test-suites.pl"/>
        <files mask="test-ref-configs.pl"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/suites" target_path="middleware/mcu-boot" type="other">
        <files mask="helpers.function"/>
        <files mask="main_test.function"/>
        <files mask="test_suite_aes.cbc.data"/>
        <files mask="test_suite_aes.cfb.data"/>
        <files mask="test_suite_aes.ecb.data"/>
        <files mask="test_suite_aes.function"/>
        <files mask="test_suite_aes.rest.data"/>
        <files mask="test_suite_arc4.data"/>
        <files mask="test_suite_arc4.function"/>
        <files mask="test_suite_asn1write.data"/>
        <files mask="test_suite_asn1write.function"/>
        <files mask="test_suite_base64.data"/>
        <files mask="test_suite_base64.function"/>
        <files mask="test_suite_blowfish.data"/>
        <files mask="test_suite_blowfish.function"/>
        <files mask="test_suite_camellia.data"/>
        <files mask="test_suite_camellia.function"/>
        <files mask="test_suite_ccm.data"/>
        <files mask="test_suite_ccm.function"/>
        <files mask="test_suite_cipher.aes.data"/>
        <files mask="test_suite_cipher.arc4.data"/>
        <files mask="test_suite_cipher.blowfish.data"/>
        <files mask="test_suite_cipher.camellia.data"/>
        <files mask="test_suite_cipher.ccm.data"/>
        <files mask="test_suite_cipher.des.data"/>
        <files mask="test_suite_cipher.function"/>
        <files mask="test_suite_cipher.gcm.data"/>
        <files mask="test_suite_cipher.null.data"/>
        <files mask="test_suite_cipher.padding.data"/>
        <files mask="test_suite_ctr_drbg.data"/>
        <files mask="test_suite_ctr_drbg.function"/>
        <files mask="test_suite_debug.data"/>
        <files mask="test_suite_debug.function"/>
        <files mask="test_suite_des.data"/>
        <files mask="test_suite_des.function"/>
        <files mask="test_suite_dhm.data"/>
        <files mask="test_suite_dhm.function"/>
        <files mask="test_suite_ecdh.data"/>
        <files mask="test_suite_ecdh.function"/>
        <files mask="test_suite_ecdsa.data"/>
        <files mask="test_suite_ecdsa.function"/>
        <files mask="test_suite_ecjpake.data"/>
        <files mask="test_suite_ecjpake.function"/>
        <files mask="test_suite_ecp.data"/>
        <files mask="test_suite_ecp.function"/>
        <files mask="test_suite_entropy.data"/>
        <files mask="test_suite_entropy.function"/>
        <files mask="test_suite_error.data"/>
        <files mask="test_suite_error.function"/>
        <files mask="test_suite_gcm.aes128_de.data"/>
        <files mask="test_suite_gcm.aes128_en.data"/>
        <files mask="test_suite_gcm.aes192_de.data"/>
        <files mask="test_suite_gcm.aes192_en.data"/>
        <files mask="test_suite_gcm.aes256_de.data"/>
        <files mask="test_suite_gcm.aes256_en.data"/>
        <files mask="test_suite_gcm.camellia.data"/>
        <files mask="test_suite_gcm.function"/>
        <files mask="test_suite_hmac_drbg.function"/>
        <files mask="test_suite_hmac_drbg.misc.data"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data"/>
        <files mask="test_suite_hmac_drbg.nopr.data"/>
        <files mask="test_suite_hmac_drbg.pr.data"/>
        <files mask="test_suite_md.data"/>
        <files mask="test_suite_md.function"/>
        <files mask="test_suite_mdx.data"/>
        <files mask="test_suite_mdx.function"/>
        <files mask="test_suite_memory_buffer_alloc.data"/>
        <files mask="test_suite_memory_buffer_alloc.function"/>
        <files mask="test_suite_mpi.data"/>
        <files mask="test_suite_mpi.function"/>
        <files mask="test_suite_pem.data"/>
        <files mask="test_suite_pem.function"/>
        <files mask="test_suite_pk.data"/>
        <files mask="test_suite_pk.function"/>
        <files mask="test_suite_pkcs1_v15.data"/>
        <files mask="test_suite_pkcs1_v15.function"/>
        <files mask="test_suite_pkcs1_v21.data"/>
        <files mask="test_suite_pkcs1_v21.function"/>
        <files mask="test_suite_pkcs5.data"/>
        <files mask="test_suite_pkcs5.function"/>
        <files mask="test_suite_pkparse.data"/>
        <files mask="test_suite_pkparse.function"/>
        <files mask="test_suite_pkwrite.data"/>
        <files mask="test_suite_pkwrite.function"/>
        <files mask="test_suite_rsa.data"/>
        <files mask="test_suite_rsa.function"/>
        <files mask="test_suite_shax.data"/>
        <files mask="test_suite_shax.function"/>
        <files mask="test_suite_ssl.data"/>
        <files mask="test_suite_ssl.function"/>
        <files mask="test_suite_version.data"/>
        <files mask="test_suite_version.function"/>
        <files mask="test_suite_x509parse.data"/>
        <files mask="test_suite_x509parse.function"/>
        <files mask="test_suite_x509write.data"/>
        <files mask="test_suite_x509write.function"/>
        <files mask="test_suite_xtea.data"/>
        <files mask="test_suite_xtea.function"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/sbtool" target_path="middleware/mcu-boot" type="src">
        <files mask="EncoreBootImageReader.cpp"/>
        <files mask="sbtool.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/sbtool" target_path="middleware/mcu-boot" type="c_include">
        <files mask="EncoreBootImageReader.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb" target_path="middleware/mcu-boot" type="c_include">
        <files mask="stdafx.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/winsupport" target_path="middleware/mcu-boot" type="c_include">
        <files mask="unistd.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.imxrt1050_files.MIMXRT1052" name="imxrt1050_files" brief="imxrt1050 files" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/bd_file/imxrt105x" target_path="middleware/mcu-boot" type="other">
        <files mask="enable_hab.bd"/>
        <files mask="imx-dtcm-encrypted.bd"/>
        <files mask="imx-dtcm-signed.bd"/>
        <files mask="imx-dtcm-unsigned.bd"/>
        <files mask="imx-flexspinor-normal-signed.bd"/>
        <files mask="imx-flexspinor-normal-unsigned.bd"/>
        <files mask="imx-flexspinor-plugin-signed.bd"/>
        <files mask="imx-flexspinor-plugin-unsigned.bd"/>
        <files mask="imx-itcm-encrypted.bd"/>
        <files mask="imx-itcm-signed.bd"/>
        <files mask="imx-itcm-unsigned.bd"/>
        <files mask="imx-ocram-unsigned.bd"/>
        <files mask="program_flexspinand_encrypt_image_keyblob.bd"/>
        <files mask="program_flexspinand_image.bd"/>
        <files mask="program_flexspinor_image_adesto_atxp032.bd"/>
        <files mask="program_flexspinor_image_hyperflash.bd"/>
        <files mask="program_flexspinor_image_hyperflash_encrypt.bd"/>
        <files mask="program_flexspinor_image_micron_mt35x.bd"/>
        <files mask="program_flexspinor_image_mxic_mx25um51245g.bd"/>
        <files mask="program_flexspinor_image_mxic_mx25um51345g.bd"/>
        <files mask="program_flexspinor_image_qspinor.bd"/>
        <files mask="program_flexspinor_image_qspinor_status_reg1_bit6.bd"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_0x31.bd"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_bit1.bd"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_bit7.bd"/>
        <files mask="program_mmccard_image_fastboot.bd"/>
        <files mask="program_mmccard_image_normal.bd"/>
        <files mask="program_sdcard_encrypt_image_keyblob.bd"/>
        <files mask="program_sdcard_image.bd"/>
        <files mask="program_semcnand_image.bd"/>
        <files mask="program_semcnor_image.bd"/>
        <files mask="program_spinor_eeprom_image.bd"/>
        <files mask="program_spinor_eeprom_image_encrypt_image_keyblob.bd"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="i.MX RT1050 Flashloader v2.7.0 Release Notes.pdf"/>
        <files mask="i.MX RT1050 Manufacturing User's Guide.pdf"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.imxrt_files.MIMXRT1052" name="imxrt_files" brief="imxrt files" version="2.7.0" devices="MIMXRT1052xxxxB" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/sdphost/linux/amd64" target_path="middleware/mcu-boot" type="other">
        <files mask="sdphost"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/sdphost/linux/i386" target_path="middleware/mcu-boot" type="other">
        <files mask="sdphost"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="MCU Flashloader Reference Manual.pdf"/>
        <files mask="sdphost User's Guide.pdf"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/sdphost/gcc" target_path="middleware/mcu-boot" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/sdphost/sdphost" target_path="middleware/mcu-boot" type="src">
        <files mask="sdphost.cpp"/>
        <files mask="stdafx.cpp"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/sdphost/sdphost" target_path="middleware/mcu-boot" type="c_include">
        <files mask="stdafx.h"/>
        <files mask="targetver.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.milliseconds.MIMXRT1052" name="MCUBOOT_milliseconds_delay" brief="MCUBOOT milliseconds delay" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/apps/led_demo/src" target_path="source" type="src">
        <files mask="milliseconds_delay.c"/>
      </source>
      <source path="middleware/mcu-boot/apps/led_demo/src" target_path="source" type="c_include">
        <files mask="milliseconds_delay.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_bm_usb.MIMXRT1052" name="MCUBOOT_bm_usb_sources" brief="Bootloader bm usb sources" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bm_usb" target_path="source/usb/bm_composite" type="c_include">
        <files mask="bootloader_hid_report_ids.h"/>
        <files mask="composite.h"/>
        <files mask="fat_directory_entry.h"/>
        <files mask="hid_bootloader.h"/>
        <files mask="msc_disk.h"/>
        <files mask="usb_descriptor.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bm_usb" target_path="source/usb/bm_composite" type="src">
        <files mask="composite.c"/>
        <files mask="hid_bootloader.c"/>
        <files mask="msc_disk.c"/>
        <files mask="usb_descriptor.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_startup.MIMXRT1052" name="MCUBOOT_startup_sources" brief="Bootloader startup sources" version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/include" target_path="source/include" type="c_include">
        <files mask="bootloader_core.h"/>
      </source>
      <source path="middleware/mcu-boot/src/startup" target_path="startup" type="src">
        <files mask="startup.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1052" name="common" version="2.2.11" full_name="SDMMC common stack" devices="MIMXRT1052xxxxB" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1052" name="mmc" version="2.2.11" full_name="SDMMC mmc stack" devices="MIMXRT1052xxxxB" dependency="middleware.sdmmc.common.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_mmc.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1052" name="sd" version="2.2.11" full_name="SDMMC sd stack" devices="MIMXRT1052xxxxB" dependency="middleware.sdmmc.common.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sd.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1052" name="sdio" version="2.2.11" full_name="SDMMC sdio stack" devices="MIMXRT1052xxxxB" dependency="middleware.sdmmc.common.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdio.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sdio.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.freertos.MIMXRT1052" name="adapter_freertos" version="2.2.11" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.usdhc.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/freertos" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.interrupt.MIMXRT1052" name="adapter_interrupt" version="2.2.11" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.usdhc.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/interrupt" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.polling.MIMXRT1052" name="adapter_polling" version="2.2.11" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 platform.drivers.usdhc.MIMXRT1052" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/polling" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.usb.device.MIMXRT1052" name="common driver" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1052" name="EHCI driver(HS)" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.device.MIMXRT1052 middleware.usb.phy.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.MIMXRT1052" name="USB device config template" brief="USB device config template" version="2.2.0" full_name="USB device config template" devices="MIMXRT1052xxxxB" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_stack.MIMXRT1052" name="USB device" brief="USB device stack" version="2.2.0" full_name="USB device stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.device_config_template.MIMXRT1052 middleware.usb.stack_common.MIMXRT1052" user_visible="true" type="middleware">
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="src">
        <files mask="usb_device_audio.c"/>
        <files mask="usb_device_ccid.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_cdc_rndis.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_hid.c"/>
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
        <files mask="usb_device_phdc.c"/>
        <files mask="usb_device_printer.c"/>
        <files mask="usb_device_video.c"/>
      </source>
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
        <files mask="usb_device_ccid.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_cdc_rndis.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_hid.h"/>
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
        <files mask="usb_device_phdc.h"/>
        <files mask="usb_device_printer.h"/>
        <files mask="usb_device_video.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1052" name="Audio class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1052" name="CDC class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1052" name="CDC RNDIS class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
    </component>
    <component id="middleware.usb.host.MIMXRT1052" name="common driver" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
      </source>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1052" name="EHCI driver(HS)" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052 middleware.usb.phy.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1052" name="Hid class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_hub.MIMXRT1052" name="Hub class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1052" name="Mass Storage class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1052" name="PHDC class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1052" name="Printer class" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host.MIMXRT1052" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_config_template.MIMXRT1052" name="USB host config template" brief="USB host config template" version="2.2.0" full_name="USB host config template" devices="MIMXRT1052xxxxB" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_stack.MIMXRT1052" name="USB host" brief="USB host stack" version="2.2.0" full_name="USB host stack" devices="MIMXRT1052xxxxB" dependency="middleware.usb.host_config_template.MIMXRT1052 middleware.usb.stack_common.MIMXRT1052" user_visible="true" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
        <files mask="usb_host_cdc.c"/>
        <files mask="usb_host_hid.c"/>
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
        <files mask="usb_host_phdc.c"/>
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
        <files mask="usb_host_cdc.h"/>
        <files mask="usb_host_hid.h"/>
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
        <files mask="usb_host_msd.h"/>
        <files mask="usb_host_phdc.h"/>
        <files mask="usb_host_printer.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_ehci.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_ip3516hs.h"/>
        <files mask="usb_host_khci.h"/>
        <files mask="usb_host_ohci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_ehci.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_ip3516hs.c"/>
        <files mask="usb_host_khci.c"/>
        <files mask="usb_host_ohci.c"/>
      </source>
    </component>
    <component id="middleware.usb.phy.MIMXRT1052" name="phy" version="1.0.0" full_name="USB stack" devices="MIMXRT1052xxxxB" user_visible="false" type="middleware">
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="middleware.usb.stack_common.MIMXRT1052" name="USB common" brief="USB common" version="2.2.0" full_name="USB common" devices="MIMXRT1052xxxxB" user_visible="true" type="middleware">
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1052" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1052" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMXRT1052xxxxB" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMXRT1052/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMXRT1052" name="assert" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 component.serial_manager.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 utility.debug_console.MIMXRT1052" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1052/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMXRT1052" name="debug_console" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 component.serial_manager.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1052/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMXRT1052/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMXRT1052/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMXRT1052/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.MIMXRT1052" name="notifier" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1052/utilities" target_path="utilities/utilities" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source path="devices/MIMXRT1052/utilities" target_path="utilities/utilities" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
    </component>
    <component id="utility.shell.MIMXRT1052" name="shell" version="1.0.0" devices="MIMXRT1052xxxxB" dependency="component.lists.MIMXRT1052 component.serial_manager.MIMXRT1052 device.MIMXRT1052_CMSIS.MIMXRT1052 platform.Include_common.MIMXRT1052 platform.Include_core_cm7.MIMXRT1052 platform.drivers.clock.MIMXRT1052 platform.drivers.common.MIMXRT1052 utility.debug_console.MIMXRT1052" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1052/utilities" target_path="utilities" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source path="devices/MIMXRT1052/utilities" target_path="utilities" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
